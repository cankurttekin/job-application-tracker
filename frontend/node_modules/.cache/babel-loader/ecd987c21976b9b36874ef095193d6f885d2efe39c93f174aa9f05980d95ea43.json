{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const {\n    isLoggedIn\n  } = useContext(AuthContext); // Use global isLoggedIn\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (isLoggedIn) {\n        try {\n          const response = await axios.get('/api/job-applications/stats', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}` // Include JWT in the request\n            }\n          });\n          const applicationsByDay = response.data.applicationsByDay;\n\n          // Transform data to array for chart\n          const chartData = Object.keys(applicationsByDay).map(date => ({\n            date: date,\n            count: applicationsByDay[date]\n          }));\n          setData(chartData);\n        } catch (error) {\n          console.error('Error fetching job application stats:', error);\n        }\n      }\n    };\n    fetchData();\n  }, [isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Applications by Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"count\",\n          fill: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Charts, \"/6pyAzRzx93DkeYkPLVzYmv5iNc=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","AuthContext","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Charts","_s","data","setData","isLoggedIn","fetchData","response","get","headers","Authorization","localStorage","getItem","applicationsByDay","chartData","Object","keys","map","date","count","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\n\nconst Charts = () => {\n    const [data, setData] = useState([]);\n    const { isLoggedIn } = useContext(AuthContext); // Use global isLoggedIn\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (isLoggedIn) {\n                try {\n                    const response = await axios.get('/api/job-applications/stats', {\n                        headers: {\n                            Authorization: `Bearer ${localStorage.getItem('token')}`, // Include JWT in the request\n                        },\n                    });\n                    const applicationsByDay = response.data.applicationsByDay;\n\n                    // Transform data to array for chart\n                    const chartData = Object.keys(applicationsByDay).map(date => ({\n                        date: date,\n                        count: applicationsByDay[date],\n                    }));\n\n                    setData(chartData);\n                } catch (error) {\n                    console.error('Error fetching job application stats:', error);\n                }\n            }\n        };\n\n        fetchData();\n    }, [isLoggedIn]);\n\n    return (\n        <div>\n            <h2>Job Applications by Day</h2>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart data={data}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Bar dataKey=\"count\" fill=\"#82ca9d\" />\n                </BarChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\nexport default Charts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}