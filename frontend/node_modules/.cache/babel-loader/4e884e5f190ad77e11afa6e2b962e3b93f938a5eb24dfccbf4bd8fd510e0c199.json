{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n\n  // Check authentication status on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n      // Decode the JWT to extract the username\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\n      setUser(decodedToken.sub); // Set the username from the sub field\n    }\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/login', credentials);\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      setIsLoggedIn(true);\n\n      // Decode the JWT to get the username\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\n      setUser(decodedToken.sub); // Set the username from the sub field\n    } catch (error) {\n      console.error('Login failed', error);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_s(AuthProvider, \"Ki3p4Ug0OIeovJYgYQgFusbAAO4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","user","setUser","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","sub","login","credentials","response","post","data","setItem","error","console","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nexport const AuthContext = createContext();\n\n// Provider component\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n\n  // Check authentication status on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n      // Decode the JWT to extract the username\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\n      setUser(decodedToken.sub); // Set the username from the sub field\n    }\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/login', credentials);\n      const { token } = response.data;\n      localStorage.setItem('token', token);\n      setIsLoggedIn(true);\n\n      // Decode the JWT to get the username\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\n      setUser(decodedToken.sub); // Set the username from the sub field\n    } catch (error) {\n      console.error('Login failed', error);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUser(null);\n  };\n\n  return (\n      <AuthContext.Provider value={{ isLoggedIn, user, login, logout }}>\n        {children}\n      </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTH,aAAa,CAAC,IAAI,CAAC;MACnB;MACA,MAAMM,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1DR,OAAO,CAACI,YAAY,CAACK,GAAG,CAAC,CAAC,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,iCAAiC,EAAEF,WAAW,CAAC;MACjF,MAAM;QAAEV;MAAM,CAAC,GAAGW,QAAQ,CAACE,IAAI;MAC/BZ,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEd,KAAK,CAAC;MACpCH,aAAa,CAAC,IAAI,CAAC;;MAEnB;MACA,MAAMM,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1DR,OAAO,CAACI,YAAY,CAACK,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBhB,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;IAChCrB,aAAa,CAAC,KAAK,CAAC;IACpBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACIR,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,UAAU;MAAEE,IAAI;MAAEW,KAAK;MAAEQ;IAAO,CAAE;IAAAvB,QAAA,EAC9DA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE7B,CAAC;AAAC7B,EAAA,CAzCWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}