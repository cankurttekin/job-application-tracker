{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js\",\n  _s = $RefreshSig$();\n// src/components/AITools.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 20px;\n`;\n_c = Container;\nconst Button = styled.button`\n    background-color: #333;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 20px;\n\n    &:hover {\n        background-color: #555;\n    }\n`;\n_c2 = Button;\nconst Dropdown = styled.select`\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-top: 10px;\n    margin-right: 10px;\n    width: 100%; /* Makes the dropdown full width */\n    max-width: 400px; /* Limits the max width */\n    font-size: 16px; /* Increases font size for better readability */\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c3 = Dropdown;\nconst QuestionsContainer = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n_c4 = QuestionsContainer;\nconst QuestionList = styled.ul`\n    list-style-type: none; /* Remove default bullet points */\n    padding: 0; /* Remove default padding */\n`;\n_c5 = QuestionList;\nconst QuestionItem = styled.li`\n    padding: 8px; /* Add padding for each question */\n    border-bottom: 1px solid #eee; /* Add a bottom border to separate questions */\n    &:last-child {\n        border-bottom: none; /* Remove border for the last item */\n    }\n`;\n_c6 = QuestionItem;\nconst JobDetails = styled.h3`\n    margin-bottom: 24px; /* Adds space between job details and questions */\n`;\n_c7 = JobDetails;\nconst AITools = () => {\n  _s();\n  const [jobApplications, setJobApplications] = useState([]);\n  const [interviewQuestions, setInterviewQuestions] = useState([]);\n  const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n  useEffect(() => {\n    const fetchJobApplications = async () => {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/job-applications`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setJobApplications(response.data);\n      if (response.data.length > 0) {\n        setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n      }\n    };\n    fetchJobApplications();\n  }, []);\n  const handleGenerateQuestions = async () => {\n    if (!selectedJobApplication) {\n      console.error(\"No job application selected.\");\n      return;\n    }\n    const {\n      jobDescription,\n      jobTitle\n    } = selectedJobApplication;\n    const token = localStorage.getItem(\"token\");\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-interview`, {\n        jobDescription,\n        jobTitle\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Response Data:\", response.data);\n\n      // Check if 'questions' property exists in the response\n      if (response.data.questions && Array.isArray(response.data.questions)) {\n        setInterviewQuestions(response.data.questions); // Set questions directly from the response\n      } else {\n        console.error(\"No questions found in response:\", response.data);\n        setInterviewQuestions([]); // Clear questions if none found\n      }\n    } catch (error) {\n      console.error(\"Error generating questions:\", error);\n      setInterviewQuestions([]); // Clear questions on error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate Interview Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), jobApplications.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        onChange: e => setSelectedJobApplication(jobApplications[e.target.value]),\n        value: jobApplications.indexOf(selectedJobApplication),\n        children: jobApplications.map((job, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: [job.jobTitle, \" - \", job.companyName, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGenerateQuestions,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), interviewQuestions && interviewQuestions.length > 0 && /*#__PURE__*/_jsxDEV(QuestionsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(JobDetails, {\n        children: [selectedJobApplication.jobTitle, \" at \", selectedJobApplication.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        children: interviewQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(AITools, \"nXDW7rrSucfxlod37lh2tqBsfQ0=\");\n_c8 = AITools;\nexport default AITools;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Dropdown\");\n$RefreshReg$(_c4, \"QuestionsContainer\");\n$RefreshReg$(_c5, \"QuestionList\");\n$RefreshReg$(_c6, \"QuestionItem\");\n$RefreshReg$(_c7, \"JobDetails\");\n$RefreshReg$(_c8, \"AITools\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Button","button","_c2","Dropdown","select","_c3","QuestionsContainer","_c4","QuestionList","ul","_c5","QuestionItem","li","_c6","JobDetails","h3","_c7","AITools","_s","jobApplications","setJobApplications","interviewQuestions","setInterviewQuestions","selectedJobApplication","setSelectedJobApplication","fetchJobApplications","token","localStorage","getItem","response","get","process","env","REACT_APP_BACKEND_URL","headers","Authorization","data","length","handleGenerateQuestions","console","error","jobDescription","jobTitle","post","log","questions","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","indexOf","map","job","index","companyName","onClick","question","_c8","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js"],"sourcesContent":["// src/components/AITools.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Button = styled.button`\n    background-color: #333;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 20px;\n\n    &:hover {\n        background-color: #555;\n    }\n`;\n\nconst Dropdown = styled.select`\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-top: 10px;\n    margin-right: 10px;\n    width: 100%; /* Makes the dropdown full width */\n    max-width: 400px; /* Limits the max width */\n    font-size: 16px; /* Increases font size for better readability */\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst QuestionsContainer = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n\nconst QuestionList = styled.ul`\n    list-style-type: none; /* Remove default bullet points */\n    padding: 0; /* Remove default padding */\n`;\n\nconst QuestionItem = styled.li`\n    padding: 8px; /* Add padding for each question */\n    border-bottom: 1px solid #eee; /* Add a bottom border to separate questions */\n    &:last-child {\n        border-bottom: none; /* Remove border for the last item */\n    }\n`;\n\nconst JobDetails = styled.h3`\n    margin-bottom: 24px; /* Adds space between job details and questions */\n`;\n\nconst AITools = () => {\n    const [jobApplications, setJobApplications] = useState([]);\n    const [interviewQuestions, setInterviewQuestions] = useState([]);\n    const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n\n    useEffect(() => {\n        const fetchJobApplications = async () => {\n            const token = localStorage.getItem(\"token\");\n            const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/job-applications`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            setJobApplications(response.data);\n            if (response.data.length > 0) {\n                setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n            }\n        };\n\n        fetchJobApplications();\n    }, []);\n\n    const handleGenerateQuestions = async () => {\n        if (!selectedJobApplication) {\n            console.error(\"No job application selected.\");\n            return;\n        }\n\n        const { jobDescription, jobTitle } = selectedJobApplication;\n\n        const token = localStorage.getItem(\"token\");\n        try {\n            const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-interview`, {\n                jobDescription,\n                jobTitle\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            console.log(\"Response Data:\", response.data);\n\n            // Check if 'questions' property exists in the response\n            if (response.data.questions && Array.isArray(response.data.questions)) {\n                setInterviewQuestions(response.data.questions); // Set questions directly from the response\n            } else {\n                console.error(\"No questions found in response:\", response.data);\n                setInterviewQuestions([]); // Clear questions if none found\n            }\n        } catch (error) {\n            console.error(\"Error generating questions:\", error);\n            setInterviewQuestions([]); // Clear questions on error\n        }\n    };\n\n    return (\n        <Container>\n            <h2>Generate Interview Questions</h2>\n\n            {jobApplications.length > 0 && (\n                <>\n                    <Dropdown\n                        onChange={(e) => setSelectedJobApplication(jobApplications[e.target.value])}\n                        value={jobApplications.indexOf(selectedJobApplication)}\n                    >\n                        {jobApplications.map((job, index) => (\n                            <option key={index} value={index}>\n                                {job.jobTitle} - {job.companyName} {/* Adjust to match your job application structure */}\n                            </option>\n                        ))}\n                    </Dropdown>\n\n                    <Button onClick={handleGenerateQuestions}>Generate</Button>\n                </>\n            )}\n\n            {interviewQuestions && interviewQuestions.length > 0 && (\n                <QuestionsContainer>\n                    <JobDetails>\n                        {selectedJobApplication.jobTitle} at {selectedJobApplication.companyName}\n                    </JobDetails>\n                    <h3>Generated Questions:</h3>\n                    <QuestionList>\n                        {interviewQuestions.map((question, index) => (\n                            <QuestionItem key={index}>{question}</QuestionItem>\n                        ))}\n                    </QuestionList>\n                </QuestionsContainer>\n            )}\n        </Container>\n    );\n};\n\nexport default AITools;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}