{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { ResponsiveContainer } from 'recharts';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst REACT_APP_BACKEND_URL = process.env.REACT_APP_BACKEND_URL + '/api';\n\n// Styled Components\n\n// Global Style for Full-Page Background\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    background-color: white; /* Optional base color */\n    background-image: \n      linear-gradient(0deg, transparent 24%, rgba(0, 0, 0, 0.1) 25%, transparent 26%, transparent),\n      linear-gradient(90deg, transparent 24%, rgba(0, 0, 0, 0.1) 25%, transparent 26%, transparent);\n    background-size: 50px 30px;\n  }\n\n  #root {\n    height: 100%; /* Ensures React root covers full height */\n  }\n`;\n_c = GlobalStyle;\nconst Container = styled.div`\n  margin: 20px;\n  box-sizing: border-box;\n`;\n_c2 = Container;\nconst Header = styled.h2`\n  text-align: center;\n    //textAlign: 'center';\n  margin-bottom: 20px;\n`;\n_c3 = Header;\nconst ChartWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c4 = ChartWrapper;\nconst GitHubContributionsChart = ({\n  applicationsByDay\n}) => {\n  const totalDays = 365;\n  const days = Array.from({\n    length: totalDays\n  }, (_, index) => {\n    const date = new Date();\n    date.setDate(date.getDate() - index);\n    return date.toISOString().split('T')[0]; // Format YYYY-MM-DD\n  }).reverse();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(53, 20px)',\n      gap: '2px'\n    },\n    children: days.map(day => {\n      const applications = applicationsByDay[day] || 0;\n      const color = applications > 0 ? `rgba(76, 175, 80, ${Math.min(applications / 10, 1)})` : 'rgba(0, 0, 0, 0.1)'; // Adjust the divisor for color intensity\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '20px',\n          height: '20px',\n          backgroundColor: color,\n          border: '1px solid #ddd'\n        },\n        title: `Applications: ${applications}`\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_c5 = GitHubContributionsChart;\nconst Charts = () => {\n  _s();\n  const [applicationsByDay, setApplicationsByDay] = useState({});\n  const {\n    isLoggedIn\n  } = useContext(AuthContext); // Use global isLoggedIn\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (isLoggedIn) {\n        try {\n          const response = await axios.get(`${REACT_APP_BACKEND_URL}/job-applications/stats`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}` // Include JWT in the request\n            }\n          });\n          setApplicationsByDay(response.data.applicationsByDay);\n        } catch (error) {\n          console.error('Error fetching job application stats:', error);\n        }\n      }\n    };\n    fetchData();\n  }, [isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"Job Applications by Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChartWrapper, {\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(GitHubContributionsChart, {\n              applicationsByDay: applicationsByDay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Charts, \"dgouBQVstynOfMPHNBrjoQ0F+Xg=\");\n_c6 = Charts;\nexport default Charts;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"ChartWrapper\");\n$RefreshReg$(_c5, \"GitHubContributionsChart\");\n$RefreshReg$(_c6, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","AuthContext","ResponsiveContainer","styled","createGlobalStyle","jsxDEV","_jsxDEV","Fragment","_Fragment","REACT_APP_BACKEND_URL","process","env","GlobalStyle","_c","Container","div","_c2","Header","h2","_c3","ChartWrapper","_c4","GitHubContributionsChart","applicationsByDay","totalDays","days","Array","from","length","_","index","date","Date","setDate","getDate","toISOString","split","reverse","style","display","gridTemplateColumns","gap","children","map","day","applications","color","Math","min","width","height","backgroundColor","border","title","fileName","_jsxFileName","lineNumber","columnNumber","_c5","Charts","_s","setApplicationsByDay","isLoggedIn","fetchData","response","get","headers","Authorization","localStorage","getItem","data","error","console","_c6","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { ResponsiveContainer } from 'recharts';\nimport styled, {createGlobalStyle} from 'styled-components';\n\nconst REACT_APP_BACKEND_URL = process.env.REACT_APP_BACKEND_URL+'/api';\n\n// Styled Components\n\n// Global Style for Full-Page Background\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    background-color: white; /* Optional base color */\n    background-image: \n      linear-gradient(0deg, transparent 24%, rgba(0, 0, 0, 0.1) 25%, transparent 26%, transparent),\n      linear-gradient(90deg, transparent 24%, rgba(0, 0, 0, 0.1) 25%, transparent 26%, transparent);\n    background-size: 50px 30px;\n  }\n\n  #root {\n    height: 100%; /* Ensures React root covers full height */\n  }\n`;\nconst Container = styled.div`\n  margin: 20px;\n  box-sizing: border-box;\n`;\n\nconst Header = styled.h2`\n  text-align: center;\n    //textAlign: 'center';\n  margin-bottom: 20px;\n`;\n\nconst ChartWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst GitHubContributionsChart = ({ applicationsByDay }) => {\n    const totalDays = 365;\n    const days = Array.from({ length: totalDays }, (_, index) => {\n        const date = new Date();\n        date.setDate(date.getDate() - index);\n        return date.toISOString().split('T')[0]; // Format YYYY-MM-DD\n    }).reverse();\n\n    return (\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(53, 20px)', gap: '2px' }}>\n            {days.map((day) => {\n                const applications = applicationsByDay[day] || 0;\n                const color = applications > 0 ? `rgba(76, 175, 80, ${Math.min(applications / 10, 1)})` : 'rgba(0, 0, 0, 0.1)'; // Adjust the divisor for color intensity\n                return (\n                    <div\n                        key={day}\n                        style={{\n                            width: '20px',\n                            height: '20px',\n                            backgroundColor: color,\n                            border: '1px solid #ddd',\n                        }}\n                        title={`Applications: ${applications}`}\n                    ></div>\n                );\n            })}\n        </div>\n    );\n};\n\nconst Charts = () => {\n    const [applicationsByDay, setApplicationsByDay] = useState({});\n    const { isLoggedIn } = useContext(AuthContext); // Use global isLoggedIn\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (isLoggedIn) {\n                try {\n                    const response = await axios.get(`${REACT_APP_BACKEND_URL}/job-applications/stats`, {\n                        headers: {\n                            Authorization: `Bearer ${localStorage.getItem('token')}`, // Include JWT in the request\n                        },\n                    });\n                    setApplicationsByDay(response.data.applicationsByDay);\n                } catch (error) {\n                    console.error('Error fetching job application stats:', error);\n                }\n            }\n        };\n\n        fetchData();\n    }, [isLoggedIn]);\n\n    return (\n        <>\n        <GlobalStyle />\n        <Container>\n            <Header>Job Applications by Day</Header>\n            <ChartWrapper>\n                <ResponsiveContainer width=\"100%\" height={300}>\n        <div>\n            <GitHubContributionsChart applicationsByDay={applicationsByDay} />\n        </div>\n                </ResponsiveContainer>\n            </ChartWrapper>\n        </Container>\n            </>\n    );\n};\n\nexport default Charts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}