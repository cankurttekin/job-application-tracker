{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { ResponsiveContainer } from 'recharts';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REACT_APP_BACKEND_URL = process.env.REACT_APP_BACKEND_URL + '/api';\n\n// Styled Components\nconst Container = styled.div`\n    display: flex;\n    justify-content: center; /* Center the container horizontally */\n    margin: 20px;\n`;\n_c = Container;\nconst Header = styled.h2`\n    text-align: center;\n    margin-bottom: 20px;\n`;\n_c2 = Header;\nconst ChartWrapper = styled.div`\n    background-color: black;\n    padding: 20px;\n    border-radius: 20px;\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n    display: inline-block; /* Set width based on content */\n    margin: 0 auto; /* Center horizontally */\n`;\n_c3 = ChartWrapper;\nconst GitHubContributionsChartWrapper = styled.div`\n    display: grid;\n    grid-template-columns: repeat(53, 20px);\n    gap: 2px;\n    justify-content: center;\n`;\n_c4 = GitHubContributionsChartWrapper;\nconst GitHubContributionsChart = ({\n  applicationsByDay\n}) => {\n  const totalDays = 365;\n  const days = Array.from({\n    length: totalDays\n  }, (_, index) => {\n    const date = new Date();\n    date.setDate(date.getDate() - index);\n    return date.toISOString().split('T')[0]; // Format YYYY-MM-DD\n  }).reverse();\n  return /*#__PURE__*/_jsxDEV(GitHubContributionsChartWrapper, {\n    children: days.map(day => {\n      const applications = applicationsByDay[day] || 0;\n      const color = applications > 0 ? `rgba(57, 211, 83, ${Math.min(applications / 3, 1)})` : 'rgba(22, 28, 34, 1)';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '20px',\n          height: '20px',\n          backgroundColor: color,\n          border: '1px solid #ddd'\n        },\n        title: `Applications: ${applications}`\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_c5 = GitHubContributionsChart;\nconst Charts = () => {\n  _s();\n  const [applicationsByDay, setApplicationsByDay] = useState({});\n  const {\n    isLoggedIn\n  } = useContext(AuthContext); // Use global isLoggedIn\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (isLoggedIn) {\n        try {\n          const response = await axios.get(`${REACT_APP_BACKEND_URL}/job-applications/stats`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}` // Include JWT in the request\n            }\n          });\n          setApplicationsByDay(response.data.applicationsByDay);\n        } catch (error) {\n          console.error('Error fetching job application stats:', error);\n        }\n      }\n    };\n    fetchData();\n  }, [isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Job Applications by Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChartWrapper, {\n      children: /*#__PURE__*/_jsxDEV(GitHubContributionsChart, {\n        applicationsByDay: applicationsByDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(Charts, \"dgouBQVstynOfMPHNBrjoQ0F+Xg=\");\n_c6 = Charts;\nexport default Charts;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"ChartWrapper\");\n$RefreshReg$(_c4, \"GitHubContributionsChartWrapper\");\n$RefreshReg$(_c5, \"GitHubContributionsChart\");\n$RefreshReg$(_c6, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","AuthContext","ResponsiveContainer","styled","jsxDEV","_jsxDEV","REACT_APP_BACKEND_URL","process","env","Container","div","_c","Header","h2","_c2","ChartWrapper","_c3","GitHubContributionsChartWrapper","_c4","GitHubContributionsChart","applicationsByDay","totalDays","days","Array","from","length","_","index","date","Date","setDate","getDate","toISOString","split","reverse","children","map","day","applications","color","Math","min","style","width","height","backgroundColor","border","title","fileName","_jsxFileName","lineNumber","columnNumber","_c5","Charts","_s","setApplicationsByDay","isLoggedIn","fetchData","response","get","headers","Authorization","localStorage","getItem","data","error","console","_c6","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { ResponsiveContainer } from 'recharts';\nimport styled from 'styled-components';\n\nconst REACT_APP_BACKEND_URL = process.env.REACT_APP_BACKEND_URL+'/api';\n\n// Styled Components\nconst Container = styled.div`\n    display: flex;\n    justify-content: center; /* Center the container horizontally */\n    margin: 20px;\n`;\n\nconst Header = styled.h2`\n    text-align: center;\n    margin-bottom: 20px;\n`;\n\nconst ChartWrapper = styled.div`\n    background-color: black;\n    padding: 20px;\n    border-radius: 20px;\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n    display: inline-block; /* Set width based on content */\n    margin: 0 auto; /* Center horizontally */\n`;\n\nconst GitHubContributionsChartWrapper = styled.div`\n    display: grid;\n    grid-template-columns: repeat(53, 20px);\n    gap: 2px;\n    justify-content: center;\n`;\n\nconst GitHubContributionsChart = ({ applicationsByDay }) => {\n    const totalDays = 365;\n    const days = Array.from({ length: totalDays }, (_, index) => {\n        const date = new Date();\n        date.setDate(date.getDate() - index);\n        return date.toISOString().split('T')[0]; // Format YYYY-MM-DD\n    }).reverse();\n\n    return (\n        <GitHubContributionsChartWrapper>\n            {days.map((day) => {\n                const applications = applicationsByDay[day] || 0;\n                const color = applications > 0 ? `rgba(57, 211, 83, ${Math.min(applications / 3, 1)})` : 'rgba(22, 28, 34, 1)';\n                return (\n                    <div\n                        key={day}\n                        style={{\n                            width: '20px',\n                            height: '20px',\n                            backgroundColor: color,\n                            border: '1px solid #ddd',\n                        }}\n                        title={`Applications: ${applications}`}\n                    ></div>\n                );\n            })}\n        </GitHubContributionsChartWrapper>\n    );\n};\n\nconst Charts = () => {\n    const [applicationsByDay, setApplicationsByDay] = useState({});\n    const { isLoggedIn } = useContext(AuthContext); // Use global isLoggedIn\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (isLoggedIn) {\n                try {\n                    const response = await axios.get(`${REACT_APP_BACKEND_URL}/job-applications/stats`, {\n                        headers: {\n                            Authorization: `Bearer ${localStorage.getItem('token')}`, // Include JWT in the request\n                        },\n                    });\n                    setApplicationsByDay(response.data.applicationsByDay);\n                } catch (error) {\n                    console.error('Error fetching job application stats:', error);\n                }\n            }\n        };\n\n        fetchData();\n    }, [isLoggedIn]);\n\n    return (\n        <Container>\n            <Header>Job Applications by Day</Header>\n            <ChartWrapper>\n                <GitHubContributionsChart applicationsByDay={applicationsByDay} />\n            </ChartWrapper>\n        </Container>\n    );\n};\n\nexport default Charts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}