{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-frontend/src/components/AddJobApplication.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport api from '../api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddJobApplication() {\n  _s();\n  const [companyName, setCompanyName] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [status, setStatus] = useState('');\n  const [applicationDate, setApplicationDate] = useState('');\n  const [responseDate, setResponseDate] = useState('');\n  const [platform, setPlatform] = useState('');\n  const [jobUrl, setJobUrl] = useState('');\n  const [description, setDescription] = useState('');\n  const [comments, setComments] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleAddApplication = async e => {\n    e.preventDefault();\n    try {\n      await api.post('/job-applications', {\n        companyName,\n        jobTitle,\n        status,\n        applicationDate,\n        responseDate,\n        platform,\n        jobUrl,\n        description,\n        comments\n      });\n      setMessage('Application added successfully');\n      navigate('/applications');\n    } catch (error) {\n      setMessage('Failed to add application');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Job Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddApplication,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Position\",\n        value: position,\n        onChange: e => setPosition(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company\",\n        value: company,\n        onChange: e => setCompany(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(AddJobApplication, \"98A6uoauti1Ftx07fHwvYAxzOpk=\", false, function () {\n  return [useNavigate];\n});\n_c = AddJobApplication;\nexport default AddJobApplication;\nvar _c;\n$RefreshReg$(_c, \"AddJobApplication\");","map":{"version":3,"names":["useState","api","useNavigate","jsxDEV","_jsxDEV","AddJobApplication","_s","companyName","setCompanyName","jobTitle","setJobTitle","status","setStatus","applicationDate","setApplicationDate","responseDate","setResponseDate","platform","setPlatform","jobUrl","setJobUrl","description","setDescription","comments","setComments","message","setMessage","navigate","handleAddApplication","e","preventDefault","post","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","position","onChange","setPosition","target","company","setCompany","_c","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-frontend/src/components/AddJobApplication.js"],"sourcesContent":["import { useState } from 'react';\nimport api from '../api';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AddJobApplication() {\n  const [companyName, setCompanyName] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [status, setStatus] = useState('');\n  const [applicationDate, setApplicationDate] = useState('');\n  const [responseDate, setResponseDate] = useState('');\n  const [platform, setPlatform] = useState('');\n  const [jobUrl, setJobUrl] = useState('');\n  const [description, setDescription] = useState('');\n  const [comments, setComments] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  \nconst handleAddApplication = async (e) => {\n    e.preventDefault();\n    try {\n      await api.post('/job-applications', { \n\tcompanyName,\n        jobTitle,\n        status,\n        applicationDate,\n        responseDate,\n        platform,\n        jobUrl,\n        description,\n        comments,});\n      setMessage('Application added successfully');\n      navigate('/applications');\n    } catch (error) {\n      setMessage('Failed to add application');\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add Job Application</h2>\n      <form onSubmit={handleAddApplication}>\n        <input\n          type=\"text\"\n          placeholder=\"Position\"\n          value={position}\n          onChange={(e) => setPosition(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Company\"\n          value={company}\n          onChange={(e) => setCompany(e.target.value)}\n        />\n        <button type=\"submit\">Add Application</button>\n      </form>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default AddJobApplication;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}