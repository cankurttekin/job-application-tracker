{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 20px;\n`;\n_c = Container;\nconst Button = styled.button`\n    background-color: black;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 20px;\n\n    &:hover {\n        background-color: #333;\n    }\n`;\n_c2 = Button;\nconst Dropdown = styled.select`\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-top: 10px;\n    margin-right: 10px;\n    width: 100%; /* Makes the dropdown full width */\n    max-width: 400px; /* Limits the max width */\n    font-size: 16px; /* Increases font size for better readability */\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c3 = Dropdown;\nconst QuestionsContainer = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n_c4 = QuestionsContainer;\nconst QuestionList = styled.ul`\n    list-style-type: none; /* Remove default bullet points */\n    padding: 0; /* Remove default padding */\n`;\n_c5 = QuestionList;\nconst QuestionItem = styled.li`\n    padding: 8px; /* Add padding for each question */\n    border-bottom: 1px solid #eee; /* Add a bottom border to separate questions */\n    &:last-child {\n        border-bottom: none; /* Remove border for the last item */\n    }\n`;\n_c6 = QuestionItem;\nconst JobDetails = styled.h3`\n    margin-bottom: 24px; /* Adds space between job details and questions */\n`;\n_c7 = JobDetails;\nconst ResultMessage = styled.div`\n    margin-top: 10px;\n    color: green; /* Change color based on correctness */\n`;\n_c8 = ResultMessage;\nconst AITools = () => {\n  _s();\n  const [jobApplications, setJobApplications] = useState([]);\n  const [interviewQuestions, setInterviewQuestions] = useState([]);\n  const [quizQuestions, setQuizQuestions] = useState([]); // State for quiz questions\n  const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({}); // State to track selected answers\n  const [resultMessage, setResultMessage] = useState(\"\"); // State for result feedback\n\n  useEffect(() => {\n    const fetchJobApplications = async () => {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/job-applications`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setJobApplications(response.data);\n      if (response.data.length > 0) {\n        setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n      }\n    };\n    fetchJobApplications();\n  }, []);\n  const handleGenerateQuestions = async () => {\n    // Same implementation for generating interview questions\n  };\n  const handleGenerateQuiz = async () => {\n    if (!selectedJobApplication) {\n      console.error(\"No job application selected.\");\n      return;\n    }\n    const {\n      jobDescription,\n      jobTitle\n    } = selectedJobApplication;\n    const token = localStorage.getItem(\"token\");\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-quiz`, {\n        jobDescription,\n        jobTitle\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Quiz Response Data:\", response.data);\n\n      // Assuming the API returns quiz questions in a structured format\n      if (response.data) {\n        setQuizQuestions(response.data); // Set quiz questions (expecting an array of objects)\n        setSelectedAnswers({}); // Reset selected answers\n        setResultMessage(\"\"); // Clear previous results\n      } else {\n        console.error(\"No quiz questions found in response:\", response.data);\n        setQuizQuestions([]); // Clear quiz if none found\n      }\n    } catch (error) {\n      console.error(\"Error generating quiz:\", error);\n      setQuizQuestions([]); // Clear quiz on error\n    }\n  };\n  const handleAnswerChange = (questionIndex, selectedOption) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [questionIndex]: selectedOption\n    }));\n  };\n  const checkAnswers = () => {\n    // Compare selected answers with correct answers\n    let correctCount = 0;\n    quizQuestions.forEach((question, index) => {\n      if (selectedAnswers[index] === question.correctAnswer) {\n        correctCount++;\n      }\n    });\n    setResultMessage(`You got ${correctCount} out of ${quizQuestions.length} correct!`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate Interview Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), jobApplications.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        onChange: e => setSelectedJobApplication(jobApplications[e.target.value]),\n        value: jobApplications.indexOf(selectedJobApplication),\n        children: jobApplications.map((job, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: [job.jobTitle, \" - \", job.companyName, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGenerateQuestions,\n        children: \"Generate Interview Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGenerateQuiz,\n        children: \"Generate Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true), interviewQuestions && interviewQuestions.length > 0 && /*#__PURE__*/_jsxDEV(QuestionsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(JobDetails, {\n        children: [selectedJobApplication.jobTitle, \" at \", selectedJobApplication.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Interview Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        children: interviewQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }, this), quizQuestions && quizQuestions.length > 0 && /*#__PURE__*/_jsxDEV(QuestionsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(JobDetails, {\n        children: [selectedJobApplication.jobTitle, \" at \", selectedJobApplication.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Quiz Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        children: quizQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: question.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `q${index}o${optionIndex}`,\n              name: `question${index}`,\n              value: option,\n              onChange: () => handleAnswerChange(index, option),\n              checked: selectedAnswers[index] === option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `q${index}o${optionIndex}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 41\n            }, this)]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 37\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: checkAnswers,\n        children: \"Check Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this), resultMessage && /*#__PURE__*/_jsxDEV(ResultMessage, {\n        children: resultMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n_s(AITools, \"kgWjVuYDnkVSQvyZuLbtB4mHI0w=\");\n_c9 = AITools;\nexport default AITools;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Dropdown\");\n$RefreshReg$(_c4, \"QuestionsContainer\");\n$RefreshReg$(_c5, \"QuestionList\");\n$RefreshReg$(_c6, \"QuestionItem\");\n$RefreshReg$(_c7, \"JobDetails\");\n$RefreshReg$(_c8, \"ResultMessage\");\n$RefreshReg$(_c9, \"AITools\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Button","button","_c2","Dropdown","select","_c3","QuestionsContainer","_c4","QuestionList","ul","_c5","QuestionItem","li","_c6","JobDetails","h3","_c7","ResultMessage","_c8","AITools","_s","jobApplications","setJobApplications","interviewQuestions","setInterviewQuestions","quizQuestions","setQuizQuestions","selectedJobApplication","setSelectedJobApplication","selectedAnswers","setSelectedAnswers","resultMessage","setResultMessage","fetchJobApplications","token","localStorage","getItem","response","get","process","env","REACT_APP_BACKEND_URL","headers","Authorization","data","length","handleGenerateQuestions","handleGenerateQuiz","console","error","jobDescription","jobTitle","post","log","handleAnswerChange","questionIndex","selectedOption","prev","checkAnswers","correctCount","forEach","question","index","correctAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","indexOf","map","job","companyName","onClick","questionText","options","option","optionIndex","type","id","name","checked","htmlFor","_c9","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Button = styled.button`\n    background-color: black;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 20px;\n\n    &:hover {\n        background-color: #333;\n    }\n`;\n\nconst Dropdown = styled.select`\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-top: 10px;\n    margin-right: 10px;\n    width: 100%; /* Makes the dropdown full width */\n    max-width: 400px; /* Limits the max width */\n    font-size: 16px; /* Increases font size for better readability */\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst QuestionsContainer = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n\nconst QuestionList = styled.ul`\n    list-style-type: none; /* Remove default bullet points */\n    padding: 0; /* Remove default padding */\n`;\n\nconst QuestionItem = styled.li`\n    padding: 8px; /* Add padding for each question */\n    border-bottom: 1px solid #eee; /* Add a bottom border to separate questions */\n    &:last-child {\n        border-bottom: none; /* Remove border for the last item */\n    }\n`;\n\nconst JobDetails = styled.h3`\n    margin-bottom: 24px; /* Adds space between job details and questions */\n`;\n\nconst ResultMessage = styled.div`\n    margin-top: 10px;\n    color: green; /* Change color based on correctness */\n`;\n\nconst AITools = () => {\n    const [jobApplications, setJobApplications] = useState([]);\n    const [interviewQuestions, setInterviewQuestions] = useState([]);\n    const [quizQuestions, setQuizQuestions] = useState([]); // State for quiz questions\n    const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n    const [selectedAnswers, setSelectedAnswers] = useState({}); // State to track selected answers\n    const [resultMessage, setResultMessage] = useState(\"\"); // State for result feedback\n\n    useEffect(() => {\n        const fetchJobApplications = async () => {\n            const token = localStorage.getItem(\"token\");\n            const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/job-applications`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            setJobApplications(response.data);\n            if (response.data.length > 0) {\n                setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n            }\n        };\n\n        fetchJobApplications();\n    }, []);\n\n    const handleGenerateQuestions = async () => {\n        // Same implementation for generating interview questions\n    };\n\n    const handleGenerateQuiz = async () => {\n        if (!selectedJobApplication) {\n            console.error(\"No job application selected.\");\n            return;\n        }\n\n        const { jobDescription, jobTitle } = selectedJobApplication;\n\n        const token = localStorage.getItem(\"token\");\n        try {\n            const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-quiz`, {\n                jobDescription,\n                jobTitle\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            console.log(\"Quiz Response Data:\", response.data);\n\n            // Assuming the API returns quiz questions in a structured format\n            if (response.data) {\n                setQuizQuestions(response.data); // Set quiz questions (expecting an array of objects)\n                setSelectedAnswers({}); // Reset selected answers\n                setResultMessage(\"\"); // Clear previous results\n            } else {\n                console.error(\"No quiz questions found in response:\", response.data);\n                setQuizQuestions([]); // Clear quiz if none found\n            }\n        } catch (error) {\n            console.error(\"Error generating quiz:\", error);\n            setQuizQuestions([]); // Clear quiz on error\n        }\n    };\n\n    const handleAnswerChange = (questionIndex, selectedOption) => {\n        setSelectedAnswers((prev) => ({\n            ...prev,\n            [questionIndex]: selectedOption,\n        }));\n    };\n\n    const checkAnswers = () => {\n        // Compare selected answers with correct answers\n        let correctCount = 0;\n        quizQuestions.forEach((question, index) => {\n            if (selectedAnswers[index] === question.correctAnswer) {\n                correctCount++;\n            }\n        });\n\n        setResultMessage(`You got ${correctCount} out of ${quizQuestions.length} correct!`);\n    };\n\n    return (\n        <Container>\n            <h2>Generate Interview Questions</h2>\n\n            {jobApplications.length > 0 && (\n                <>\n                    <Dropdown\n                        onChange={(e) => setSelectedJobApplication(jobApplications[e.target.value])}\n                        value={jobApplications.indexOf(selectedJobApplication)}\n                    >\n                        {jobApplications.map((job, index) => (\n                            <option key={index} value={index}>\n                                {job.jobTitle} - {job.companyName} {/* Adjust to match your job application structure */}\n                            </option>\n                        ))}\n                    </Dropdown>\n\n                    <Button onClick={handleGenerateQuestions}>Generate Interview Questions</Button>\n                    <Button onClick={handleGenerateQuiz}>Generate Quiz</Button> {/* Button for generating quiz */}\n                </>\n            )}\n\n            {interviewQuestions && interviewQuestions.length > 0 && (\n                <QuestionsContainer>\n                    <JobDetails>\n                        {selectedJobApplication.jobTitle} at {selectedJobApplication.companyName}\n                    </JobDetails>\n                    <h3>Generated Interview Questions:</h3>\n                    <QuestionList>\n                        {interviewQuestions.map((question, index) => (\n                            <QuestionItem key={index}>{question}</QuestionItem>\n                        ))}\n                    </QuestionList>\n                </QuestionsContainer>\n            )}\n\n            {quizQuestions && quizQuestions.length > 0 && (\n                <QuestionsContainer>\n                    <JobDetails>\n                        {selectedJobApplication.jobTitle} at {selectedJobApplication.companyName}\n                    </JobDetails>\n                    <h3>Generated Quiz Questions:</h3>\n                    <QuestionList>\n                        {quizQuestions.map((question, index) => (\n                            <QuestionItem key={index}>\n                                <h4>{question.questionText}</h4>\n                                {question.options.map((option, optionIndex) => (\n                                    <div key={optionIndex}>\n                                        <input\n                                            type=\"radio\"\n                                            id={`q${index}o${optionIndex}`}\n                                            name={`question${index}`}\n                                            value={option}\n                                            onChange={() => handleAnswerChange(index, option)}\n                                            checked={selectedAnswers[index] === option}\n                                        />\n                                        <label htmlFor={`q${index}o${optionIndex}`}>{option}</label>\n                                    </div>\n                                ))}\n                            </QuestionItem>\n                        ))}\n                    </QuestionList>\n                    <Button onClick={checkAnswers}>Check Answers</Button>\n                    {resultMessage && <ResultMessage>{resultMessage}</ResultMessage>}\n                </QuestionsContainer>\n            )}\n        </Container>\n    );\n};\n\nexport default AITools;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}