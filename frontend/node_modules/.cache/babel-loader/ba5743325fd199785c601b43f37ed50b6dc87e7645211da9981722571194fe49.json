{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst REACT_APP_BACKEND_URL = process.env.REACT_APP_BACKEND_URL + \"/api\";\nconst Container = styled.div`\n    padding: 20px;\n`;\n_c = Container;\nconst SelectionContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: 10px;\n`;\n_c2 = SelectionContainer;\nconst Dropdown = styled.select`\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-top: 10px;\n    margin-right: 10px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c3 = Dropdown;\nconst QuestionsContainer = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n_c4 = QuestionsContainer;\nconst QuestionList = styled.ul`\n    list-style-type: none;\n    padding: 0;\n`;\n_c5 = QuestionList;\nconst QuestionItem = styled.li`\n    padding: 8px;\n    border-bottom: 1px solid #eee;\n    &:last-child {\n        border-bottom: none;\n    }\n`;\n_c6 = QuestionItem;\nconst JobDetails = styled.h3`\n    margin-bottom: 24px;\n`;\n_c7 = JobDetails;\nconst ResultMessage = styled.p`\n    margin-top: 20px;\n    font-weight: bold;\n`;\n_c8 = ResultMessage;\nconst PersonalizationSection = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n_c9 = PersonalizationSection;\nconst CheckboxLabel = styled.label`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n    input {\n        margin-right: 10px;\n        transform: scale(1.2); /* Adjust size of checkboxes */\n    }\n`;\n_c10 = CheckboxLabel;\nconst AITools = () => {\n  _s();\n  const [jobApplications, setJobApplications] = useState([]);\n  const [interviewQuestions, setInterviewQuestions] = useState([]);\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [resultMessage, setResultMessage] = useState(\"\");\n  const [personalizationVisible, setPersonalizationVisible] = useState(false);\n  const [preferences, setPreferences] = useState({\n    tone: [],\n    focusAreas: [],\n    questionTypes: [],\n    experienceLevel: \"\"\n  });\n  useEffect(() => {\n    const fetchJobApplications = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(`${REACT_APP_BACKEND_URL}/job-applications`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setJobApplications(response.data);\n        if (response.data.length > 0) {\n          setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n        }\n      } catch (error) {\n        console.error(\"Error fetching job applications:\", error);\n      }\n    };\n    fetchJobApplications();\n  }, []);\n  const handleGenerateQuestions = async () => {\n    if (!selectedJobApplication) {\n      console.error(\"No job application selected.\");\n      return;\n    }\n    const {\n      description,\n      jobTitle\n    } = selectedJobApplication;\n    const token = localStorage.getItem(\"token\");\n    try {\n      const resumeResponse = await axios.get(`${REACT_APP_BACKEND_URL}/resumes`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const resume = resumeResponse.data; // Adjust based on your API response\n      const response = await axios.post(`${REACT_APP_BACKEND_URL}/llm/generate-interview`, {\n        description,\n        jobTitle,\n        resume,\n        preferences // Include preferences in the payload\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (Array.isArray(response.data.questions)) {\n        setInterviewQuestions(response.data.questions);\n      } else {\n        console.error(\"No interview questions found in response:\", response.data);\n        setInterviewQuestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error generating questions:\", error);\n      setInterviewQuestions([]);\n    }\n  };\n  const handlePreferenceChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === \"checkbox\") {\n      setPreferences(prev => {\n        const newValues = checked ? [...prev[name], value] : prev[name].filter(v => v !== value);\n        return {\n          ...prev,\n          [name]: newValues\n        };\n      });\n    } else {\n      setPreferences(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleTogglePersonalization = () => {\n    setPersonalizationVisible(!personalizationVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Tools\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), jobApplications.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SelectionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          onChange: e => setSelectedJobApplication(jobApplications[e.target.value]),\n          value: jobApplications.indexOf(selectedJobApplication),\n          children: jobApplications.map((job, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: [job.jobTitle, \" - \", job.companyName]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateQuestions,\n          children: \"Interview Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateQuiz,\n          children: \"Generate Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PersonalizationSection, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          onClick: handleTogglePersonalization,\n          style: {\n            cursor: \"pointer\",\n            color: \"blue\"\n          },\n          children: \"Personalize your AI responses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), personalizationVisible && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Select Tone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"tone\",\n              value: \"friendly\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 37\n            }, this), \"Friendly\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"tone\",\n              value: \"formal\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 37\n            }, this), \"Formal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"tone\",\n              value: \"casual\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 37\n            }, this), \"Casual\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"tone\",\n              value: \"encouraging\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this), \"Encouraging\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Select Focus Areas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"focusAreas\",\n              value: \"teamwork\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 37\n            }, this), \"Teamwork\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"focusAreas\",\n              value: \"leadership\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 37\n            }, this), \"Leadership\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"focusAreas\",\n              value: \"communication\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 37\n            }, this), \"Communication\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"focusAreas\",\n              value: \"problem-solving\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }, this), \"Problem Solving\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Select Question Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"questionTypes\",\n              value: \"technical\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 37\n            }, this), \"Technical\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"questionTypes\",\n              value: \"behavioral\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 37\n            }, this), \"Behavioral\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"questionTypes\",\n              value: \"situational\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 37\n            }, this), \"Situational\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Select Experience Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"experienceLevel\",\n              value: \"junior\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 37\n            }, this), \"Junior Level\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"experienceLevel\",\n              value: \"mid\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 37\n            }, this), \"Mid Level\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"experienceLevel\",\n              value: \"senior\",\n              onChange: handlePreferenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 37\n            }, this), \"Senior Level\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), interviewQuestions.length > 0 && /*#__PURE__*/_jsxDEV(QuestionsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(JobDetails, {\n        children: [selectedJobApplication.jobTitle, \" at \", selectedJobApplication.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Interview Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        children: interviewQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }, this), quizQuestions.length > 0 && /*#__PURE__*/_jsxDEV(QuestionsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(JobDetails, {\n        children: [selectedJobApplication.jobTitle, \" at \", selectedJobApplication.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quiz Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        children: quizQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 33\n          }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `question-${index}-option-${i}`,\n              name: `question-${index}`,\n              value: option,\n              onChange: () => handleAnswerSelect(index, option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `question-${index}-option-${i}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 41\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 37\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswers,\n        children: \"Check Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }, this), resultMessage && /*#__PURE__*/_jsxDEV(ResultMessage, {\n        children: resultMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n};\n_s(AITools, \"WhlIZ0SYYjzc09p5fhCXkVN8LdU=\");\n_c11 = AITools;\nexport default AITools;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SelectionContainer\");\n$RefreshReg$(_c3, \"Dropdown\");\n$RefreshReg$(_c4, \"QuestionsContainer\");\n$RefreshReg$(_c5, \"QuestionList\");\n$RefreshReg$(_c6, \"QuestionItem\");\n$RefreshReg$(_c7, \"JobDetails\");\n$RefreshReg$(_c8, \"ResultMessage\");\n$RefreshReg$(_c9, \"PersonalizationSection\");\n$RefreshReg$(_c10, \"CheckboxLabel\");\n$RefreshReg$(_c11, \"AITools\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","REACT_APP_BACKEND_URL","process","env","Container","div","_c","SelectionContainer","_c2","Dropdown","select","_c3","QuestionsContainer","_c4","QuestionList","ul","_c5","QuestionItem","li","_c6","JobDetails","h3","_c7","ResultMessage","p","_c8","PersonalizationSection","_c9","CheckboxLabel","label","_c10","AITools","_s","jobApplications","setJobApplications","interviewQuestions","setInterviewQuestions","quizQuestions","setQuizQuestions","selectedJobApplication","setSelectedJobApplication","selectedAnswers","setSelectedAnswers","resultMessage","setResultMessage","personalizationVisible","setPersonalizationVisible","preferences","setPreferences","tone","focusAreas","questionTypes","experienceLevel","fetchJobApplications","token","localStorage","getItem","response","get","headers","Authorization","data","length","error","console","handleGenerateQuestions","description","jobTitle","resumeResponse","resume","post","Array","isArray","questions","handlePreferenceChange","e","name","value","type","checked","target","prev","newValues","filter","v","handleTogglePersonalization","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","indexOf","map","job","index","companyName","onClick","handleGenerateQuiz","style","cursor","color","question","questionText","options","option","i","id","handleAnswerSelect","htmlFor","checkAnswers","_c11","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst REACT_APP_BACKEND_URL = process.env.REACT_APP_BACKEND_URL + \"/api\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst SelectionContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: 10px;\n`;\n\nconst Dropdown = styled.select`\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-top: 10px;\n    margin-right: 10px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst QuestionsContainer = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n\nconst QuestionList = styled.ul`\n    list-style-type: none;\n    padding: 0;\n`;\n\nconst QuestionItem = styled.li`\n    padding: 8px;\n    border-bottom: 1px solid #eee;\n    &:last-child {\n        border-bottom: none;\n    }\n`;\n\nconst JobDetails = styled.h3`\n    margin-bottom: 24px;\n`;\n\nconst ResultMessage = styled.p`\n    margin-top: 20px;\n    font-weight: bold;\n`;\n\nconst PersonalizationSection = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n\nconst CheckboxLabel = styled.label`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n    input {\n        margin-right: 10px;\n        transform: scale(1.2); /* Adjust size of checkboxes */\n    }\n`;\n\nconst AITools = () => {\n    const [jobApplications, setJobApplications] = useState([]);\n    const [interviewQuestions, setInterviewQuestions] = useState([]);\n    const [quizQuestions, setQuizQuestions] = useState([]);\n    const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n    const [selectedAnswers, setSelectedAnswers] = useState({});\n    const [resultMessage, setResultMessage] = useState(\"\");\n    const [personalizationVisible, setPersonalizationVisible] = useState(false);\n    const [preferences, setPreferences] = useState({\n        tone: [],\n        focusAreas: [],\n        questionTypes: [],\n        experienceLevel: \"\"\n    });\n\n    useEffect(() => {\n        const fetchJobApplications = async () => {\n            try {\n                const token = localStorage.getItem(\"token\");\n                const response = await axios.get(`${REACT_APP_BACKEND_URL}/job-applications`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setJobApplications(response.data);\n                if (response.data.length > 0) {\n                    setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n                }\n            } catch (error) {\n                console.error(\"Error fetching job applications:\", error);\n            }\n        };\n\n        fetchJobApplications();\n    }, []);\n\n    const handleGenerateQuestions = async () => {\n        if (!selectedJobApplication) {\n            console.error(\"No job application selected.\");\n            return;\n        }\n\n        const { description, jobTitle } = selectedJobApplication;\n\n        const token = localStorage.getItem(\"token\");\n        try {\n            const resumeResponse = await axios.get(`${REACT_APP_BACKEND_URL}/resumes`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            const resume = resumeResponse.data; // Adjust based on your API response\n            const response = await axios.post(`${REACT_APP_BACKEND_URL}/llm/generate-interview`, {\n                description,\n                jobTitle,\n                resume,\n                preferences // Include preferences in the payload\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            if (Array.isArray(response.data.questions)) {\n                setInterviewQuestions(response.data.questions);\n            } else {\n                console.error(\"No interview questions found in response:\", response.data);\n                setInterviewQuestions([]);\n            }\n        } catch (error) {\n            console.error(\"Error generating questions:\", error);\n            setInterviewQuestions([]);\n        }\n    };\n\n    const handlePreferenceChange = (e) => {\n        const { name, value, type, checked } = e.target;\n\n        if (type === \"checkbox\") {\n            setPreferences((prev) => {\n                const newValues = checked\n                    ? [...prev[name], value]\n                    : prev[name].filter((v) => v !== value);\n                return { ...prev, [name]: newValues };\n            });\n        } else {\n            setPreferences((prev) => ({ ...prev, [name]: value }));\n        }\n    };\n\n    const handleTogglePersonalization = () => {\n        setPersonalizationVisible(!personalizationVisible);\n    };\n\n    return (\n        <Container>\n            <h2>AI Tools</h2>\n\n            {jobApplications.length > 0 && (\n                <>\n                    <SelectionContainer>\n                        <Dropdown\n                            onChange={(e) => setSelectedJobApplication(jobApplications[e.target.value])}\n                            value={jobApplications.indexOf(selectedJobApplication)}\n                        >\n                            {jobApplications.map((job, index) => (\n                                <option key={index} value={index}>\n                                    {job.jobTitle} - {job.companyName}\n                                </option>\n                            ))}\n                        </Dropdown>\n\n                        <button onClick={handleGenerateQuestions}>Interview Questions</button>\n                        <button onClick={handleGenerateQuiz}>Generate Quiz</button>\n                    </SelectionContainer>\n\n                    <PersonalizationSection>\n                        <h3 onClick={handleTogglePersonalization} style={{ cursor: \"pointer\", color: \"blue\" }}>\n                            Personalize your AI responses\n                        </h3>\n                        {personalizationVisible && (\n                            <>\n                                <h4>Select Tone</h4>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"tone\"\n                                        value=\"friendly\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Friendly\n                                </CheckboxLabel>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"tone\"\n                                        value=\"formal\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Formal\n                                </CheckboxLabel>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"tone\"\n                                        value=\"casual\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Casual\n                                </CheckboxLabel>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"tone\"\n                                        value=\"encouraging\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Encouraging\n                                </CheckboxLabel>\n\n                                <h4>Select Focus Areas</h4>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"focusAreas\"\n                                        value=\"teamwork\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Teamwork\n                                </CheckboxLabel>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"focusAreas\"\n                                        value=\"leadership\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Leadership\n                                </CheckboxLabel>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"focusAreas\"\n                                        value=\"communication\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Communication\n                                </CheckboxLabel>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"focusAreas\"\n                                        value=\"problem-solving\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Problem Solving\n                                </CheckboxLabel>\n\n                                <h4>Select Question Types</h4>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"questionTypes\"\n                                        value=\"technical\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Technical\n                                </CheckboxLabel>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"questionTypes\"\n                                        value=\"behavioral\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Behavioral\n                                </CheckboxLabel>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"questionTypes\"\n                                        value=\"situational\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Situational\n                                </CheckboxLabel>\n\n                                <h4>Select Experience Level</h4>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"experienceLevel\"\n                                        value=\"junior\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Junior Level\n                                </CheckboxLabel>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"experienceLevel\"\n                                        value=\"mid\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Mid Level\n                                </CheckboxLabel>\n                                <CheckboxLabel>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"experienceLevel\"\n                                        value=\"senior\"\n                                        onChange={handlePreferenceChange}\n                                    />\n                                    Senior Level\n                                </CheckboxLabel>\n                            </>\n                        )}\n                    </PersonalizationSection>\n                </>\n            )}\n\n            {interviewQuestions.length > 0 && (\n                <QuestionsContainer>\n                    <JobDetails>\n                        {selectedJobApplication.jobTitle} at {selectedJobApplication.companyName}\n                    </JobDetails>\n                    <h3>Generated Interview Questions:</h3>\n                    <QuestionList>\n                        {interviewQuestions.map((question, index) => (\n                            <QuestionItem key={index}>{question}</QuestionItem>\n                        ))}\n                    </QuestionList>\n                </QuestionsContainer>\n            )}\n\n            {quizQuestions.length > 0 && (\n                <QuestionsContainer>\n                    <JobDetails>\n                        {selectedJobApplication.jobTitle} at {selectedJobApplication.companyName}\n                    </JobDetails>\n                    <h3>Quiz Questions:</h3>\n                    <QuestionList>\n                        {quizQuestions.map((question, index) => (\n                            <QuestionItem key={index}>\n                                <p>{question.questionText}</p>\n                                {question.options.map((option, i) => (\n                                    <div key={i}>\n                                        <input\n                                            type=\"radio\"\n                                            id={`question-${index}-option-${i}`}\n                                            name={`question-${index}`}\n                                            value={option}\n                                            onChange={() => handleAnswerSelect(index, option)}\n                                        />\n                                        <label htmlFor={`question-${index}-option-${i}`}>{option}</label>\n                                    </div>\n                                ))}\n                            </QuestionItem>\n                        ))}\n                    </QuestionList>\n                    <button onClick={checkAnswers}>Check Answers</button>\n                    {resultMessage && <ResultMessage>{resultMessage}</ResultMessage>}\n                </QuestionsContainer>\n            )}\n        </Container>\n    );\n};\n\nexport default AITools;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}