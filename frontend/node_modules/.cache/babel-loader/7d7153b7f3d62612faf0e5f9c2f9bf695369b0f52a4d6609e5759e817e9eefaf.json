{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 20px;\n`;\n\n/*\nconst Button = styled.button`\n    background-color: black;\n    color: white;\n    padding: 10px 20px;\n    margin-right: 10px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 10px;\n\n    &:hover {\n        background-color: #333;\n    }\n`;\n*/\n_c = Container;\nconst Dropdown = styled.select`\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-top: 10px;\n    margin-right: 10px;\n    width: 100%;\n    max-width: 400px;\n    font-size: 16px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c2 = Dropdown;\nconst QuestionsContainer = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n_c3 = QuestionsContainer;\nconst QuestionList = styled.ul`\n    list-style-type: none;\n    padding: 0;\n`;\n_c4 = QuestionList;\nconst QuestionItem = styled.li`\n    padding: 8px;\n    border-bottom: 1px solid #eee;\n    &:last-child {\n        border-bottom: none;\n    }\n`;\n_c5 = QuestionItem;\nconst JobDetails = styled.h3`\n    margin-bottom: 24px;\n`;\n_c6 = JobDetails;\nconst ResultMessage = styled.p`\n    margin-top: 20px;\n    font-weight: bold;\n`;\n_c7 = ResultMessage;\nconst AITools = () => {\n  _s();\n  const [jobApplications, setJobApplications] = useState([]);\n  const [interviewQuestions, setInterviewQuestions] = useState([]);\n  const [quizQuestions, setQuizQuestions] = useState([]); // State for quiz questions\n  const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({}); // State for selected answers\n  const [resultMessage, setResultMessage] = useState(\"\"); // State for result message\n\n  useEffect(() => {\n    const fetchJobApplications = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/job-applications`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setJobApplications(response.data);\n        if (response.data) {\n          setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n        } else {\n          setSelectedJobApplication([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching job applications:\", error);\n      }\n    };\n    fetchJobApplications();\n  }, []);\n  const handleGenerateQuestions = async () => {\n    if (!selectedJobApplication) {\n      console.error(\"No job application selected.\");\n      return;\n    }\n    const {\n      jobDescription,\n      jobTitle\n    } = selectedJobApplication;\n    const token = localStorage.getItem(\"token\");\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-interview`, {\n        jobDescription,\n        jobTitle\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Interview Response Data:\", response.data);\n\n      // Ensure response data is an array\n      if (Array.isArray(response.data.questions)) {\n        setInterviewQuestions(response.data.questions);\n      } else {\n        console.error(\"No interview questions found in response:\", response.data);\n        setInterviewQuestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error generating questions:\", error);\n      setInterviewQuestions([]);\n    }\n  };\n  const handleGenerateQuiz = async () => {\n    if (!selectedJobApplication) {\n      console.error(\"No job application selected.\");\n      return;\n    }\n    const {\n      jobDescription,\n      jobTitle\n    } = selectedJobApplication;\n    const token = localStorage.getItem(\"token\");\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-quiz`, {\n        jobDescription,\n        jobTitle\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Quiz Response Data:\", response.data);\n\n      // Ensure response data is an array of QuizQuestion objects\n      if (Array.isArray(response.data)) {\n        const formattedQuestions = response.data.map(q => ({\n          questionText: q.questionText,\n          options: q.options,\n          correctAnswer: q.correctAnswer\n        }));\n        setQuizQuestions(formattedQuestions);\n        setSelectedAnswers({}); // Reset selected answers\n        setResultMessage(\"\"); // Clear previous results\n      } else {\n        console.error(\"Expected an array of quiz questions, but got:\", response.data);\n        setQuizQuestions([]); // Clear quiz if response is not an array\n      }\n    } catch (error) {\n      console.error(\"Error generating quiz:\", error);\n      setQuizQuestions([]); // Clear quiz on error\n    }\n  };\n  const handleAnswerSelect = (questionIndex, answer) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [questionIndex]: answer\n    }));\n  };\n  const checkAnswers = () => {\n    let score = 0;\n    quizQuestions.forEach((question, index) => {\n      if (selectedAnswers[index] === question.correctAnswer) {\n        score++;\n      }\n    });\n    setResultMessage(`You scored ${score} out of ${quizQuestions.length}.`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Tools\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), jobApplications.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(SelectionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          onChange: e => setSelectedJobApplication(jobApplications[e.target.value]),\n          value: jobApplications.indexOf(selectedJobApplication),\n          children: jobApplications.map((job, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: [job.jobTitle, \" - \", job.companyName]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateQuestions,\n          children: \"Generate Interview Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateQuiz,\n          children: \"Generate Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), interviewQuestions.length > 0 && /*#__PURE__*/_jsxDEV(QuestionsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(JobDetails, {\n        children: [selectedJobApplication.jobTitle, \" at \", selectedJobApplication.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Interview Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        children: interviewQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }, this), quizQuestions.length > 0 && /*#__PURE__*/_jsxDEV(QuestionsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(JobDetails, {\n        children: [selectedJobApplication.jobTitle, \" at \", selectedJobApplication.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quiz Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        children: quizQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `question-${index}-option-${i}`,\n              name: `question-${index}`,\n              value: option,\n              onChange: () => handleAnswerSelect(index, option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `question-${index}-option-${i}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 41\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 37\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"ANSWER CHECK FUNCTIONALITY NEEDS TO BE IMPLEMENTED, CURRENTLY NOT WORKING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswers,\n        children: \"Check Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this), resultMessage && /*#__PURE__*/_jsxDEV(ResultMessage, {\n        children: resultMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n};\n_s(AITools, \"kgWjVuYDnkVSQvyZuLbtB4mHI0w=\");\n_c8 = AITools;\nexport default AITools;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Dropdown\");\n$RefreshReg$(_c3, \"QuestionsContainer\");\n$RefreshReg$(_c4, \"QuestionList\");\n$RefreshReg$(_c5, \"QuestionItem\");\n$RefreshReg$(_c6, \"JobDetails\");\n$RefreshReg$(_c7, \"ResultMessage\");\n$RefreshReg$(_c8, \"AITools\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Dropdown","select","_c2","QuestionsContainer","_c3","QuestionList","ul","_c4","QuestionItem","li","_c5","JobDetails","h3","_c6","ResultMessage","p","_c7","AITools","_s","jobApplications","setJobApplications","interviewQuestions","setInterviewQuestions","quizQuestions","setQuizQuestions","selectedJobApplication","setSelectedJobApplication","selectedAnswers","setSelectedAnswers","resultMessage","setResultMessage","fetchJobApplications","token","localStorage","getItem","response","get","process","env","REACT_APP_BACKEND_URL","headers","Authorization","data","error","console","handleGenerateQuestions","jobDescription","jobTitle","post","log","Array","isArray","questions","handleGenerateQuiz","formattedQuestions","map","q","questionText","options","correctAnswer","handleAnswerSelect","questionIndex","answer","prev","checkAnswers","score","forEach","question","index","length","children","fileName","_jsxFileName","lineNumber","columnNumber","SelectionContainer","onChange","e","target","value","indexOf","job","companyName","onClick","option","i","type","id","name","htmlFor","_c8","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\n/*\nconst Button = styled.button`\n    background-color: black;\n    color: white;\n    padding: 10px 20px;\n    margin-right: 10px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 10px;\n\n    &:hover {\n        background-color: #333;\n    }\n`;\n*/\nconst Dropdown = styled.select`\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-top: 10px;\n    margin-right: 10px;\n    width: 100%;\n    max-width: 400px;\n    font-size: 16px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst QuestionsContainer = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n\nconst QuestionList = styled.ul`\n    list-style-type: none;\n    padding: 0;\n`;\n\nconst QuestionItem = styled.li`\n    padding: 8px;\n    border-bottom: 1px solid #eee;\n    &:last-child {\n        border-bottom: none;\n    }\n`;\n\nconst JobDetails = styled.h3`\n    margin-bottom: 24px;\n`;\n\nconst ResultMessage = styled.p`\n    margin-top: 20px;\n    font-weight: bold;\n`;\n\nconst AITools = () => {\n    const [jobApplications, setJobApplications] = useState([]);\n    const [interviewQuestions, setInterviewQuestions] = useState([]);\n    const [quizQuestions, setQuizQuestions] = useState([]); // State for quiz questions\n    const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n    const [selectedAnswers, setSelectedAnswers] = useState({}); // State for selected answers\n    const [resultMessage, setResultMessage] = useState(\"\"); // State for result message\n\n    useEffect(() => {\n        const fetchJobApplications = async () => {\n            try {\n                const token = localStorage.getItem(\"token\");\n                const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/job-applications`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setJobApplications(response.data);\n                if (response.data) {\n                    setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n                } else {\n                    setSelectedJobApplication([]);\n                }\n\n            } catch (error) {\n                console.error(\"Error fetching job applications:\", error);\n            }\n        };\n\n        fetchJobApplications();\n    }, []);\n\n    const handleGenerateQuestions = async () => {\n        if (!selectedJobApplication) {\n            console.error(\"No job application selected.\");\n            return;\n        }\n\n        const { jobDescription, jobTitle } = selectedJobApplication;\n\n        const token = localStorage.getItem(\"token\");\n        try {\n            const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-interview`, {\n                jobDescription,\n                jobTitle\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            console.log(\"Interview Response Data:\", response.data);\n\n            // Ensure response data is an array\n            if (Array.isArray(response.data.questions)) {\n                setInterviewQuestions(response.data.questions);\n            } else {\n                console.error(\"No interview questions found in response:\", response.data);\n                setInterviewQuestions([]);\n            }\n        } catch (error) {\n            console.error(\"Error generating questions:\", error);\n            setInterviewQuestions([]);\n        }\n    };\n\n    const handleGenerateQuiz = async () => {\n        if (!selectedJobApplication) {\n            console.error(\"No job application selected.\");\n            return;\n        }\n\n        const { jobDescription, jobTitle } = selectedJobApplication;\n\n        const token = localStorage.getItem(\"token\");\n        try {\n            const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-quiz`, {\n                jobDescription,\n                jobTitle\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            console.log(\"Quiz Response Data:\", response.data);\n\n            // Ensure response data is an array of QuizQuestion objects\n            if (Array.isArray(response.data)) {\n                const formattedQuestions = response.data.map((q) => ({\n                    questionText: q.questionText,\n                    options: q.options,\n                    correctAnswer: q.correctAnswer,\n                }));\n                setQuizQuestions(formattedQuestions);\n                setSelectedAnswers({}); // Reset selected answers\n                setResultMessage(\"\"); // Clear previous results\n            } else {\n                console.error(\"Expected an array of quiz questions, but got:\", response.data);\n                setQuizQuestions([]); // Clear quiz if response is not an array\n            }\n        } catch (error) {\n            console.error(\"Error generating quiz:\", error);\n            setQuizQuestions([]); // Clear quiz on error\n        }\n    };\n\n    const handleAnswerSelect = (questionIndex, answer) => {\n        setSelectedAnswers((prev) => ({ ...prev, [questionIndex]: answer }));\n    };\n\n    const checkAnswers = () => {\n        let score = 0;\n        quizQuestions.forEach((question, index) => {\n            if (selectedAnswers[index] === question.correctAnswer) {\n                score++;\n            }\n        });\n        setResultMessage(`You scored ${score} out of ${quizQuestions.length}.`);\n    };\n\n    return (\n        <Container>\n            <h2>AI Tools</h2>\n\n            {jobApplications.length > 0 && (\n                <>\n                    <SelectionContainer>\n                    <Dropdown\n                        onChange={(e) => setSelectedJobApplication(jobApplications[e.target.value])}\n                        value={jobApplications.indexOf(selectedJobApplication)}\n                    >\n                        {jobApplications.map((job, index) => (\n                            <option key={index} value={index}>\n                                {job.jobTitle} - {job.companyName}\n                            </option>\n                        ))}\n                    </Dropdown>\n\n                    <button onClick={handleGenerateQuestions}>Generate Interview Questions</button>\n                    <button onClick={handleGenerateQuiz}>Generate Quiz</button>\n                    </SelectionContainer>\n                </>\n            )}\n\n            {interviewQuestions.length > 0 && (\n                <QuestionsContainer>\n                    <JobDetails>\n                        {selectedJobApplication.jobTitle} at {selectedJobApplication.companyName}\n                    </JobDetails>\n                    <h3>Generated Interview Questions:</h3>\n                    <QuestionList>\n                        {interviewQuestions.map((question, index) => (\n                            <QuestionItem key={index}>{question}</QuestionItem>\n                        ))}\n                    </QuestionList>\n                </QuestionsContainer>\n            )}\n\n            {quizQuestions.length > 0 && (\n                <QuestionsContainer>\n                    <JobDetails>\n                        {selectedJobApplication.jobTitle} at {selectedJobApplication.companyName}\n                    </JobDetails>\n                    <h3>Quiz Questions:</h3>\n                    <QuestionList>\n                        {quizQuestions.map((question, index) => (\n                            <QuestionItem key={index}>\n                                <p>{question.questionText}</p>\n                                {question.options.map((option, i) => (\n                                    <div key={i}>\n                                        <input\n                                            type=\"radio\"\n                                            id={`question-${index}-option-${i}`}\n                                            name={`question-${index}`}\n                                            value={option}\n                                            onChange={() => handleAnswerSelect(index, option)}\n                                        />\n                                        <label htmlFor={`question-${index}-option-${i}`}>{option}</label>\n                                    </div>\n                                ))}\n                            </QuestionItem>\n                        ))}\n                    </QuestionList>\n                    <div>\n                        <p><br/><i>ANSWER CHECK FUNCTIONALITY NEEDS TO BE IMPLEMENTED, CURRENTLY NOT WORKING</i></p>\n                    </div>\n                    <button onClick={checkAnswers}>Check Answers</button>\n                    {resultMessage && <ResultMessage>{resultMessage}</ResultMessage>}\n                </QuestionsContainer>\n            )}\n        </Container>\n    );\n};\n\nexport default AITools;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}