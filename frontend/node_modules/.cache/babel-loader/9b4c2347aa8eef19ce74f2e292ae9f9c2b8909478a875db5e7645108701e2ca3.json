{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { login } from '../services/authService';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setPage\n}) => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await login(username, password);\n      // navigate after successful login\n      //navigate(\"/job-applications\");\n      console.log(login.response.data);\n      setPage('home');\n    } catch (error) {\n      console.error(\"Invalid credentials\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'black',\n      color: 'white',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          backgroundColor: 'white',\n          color: 'black'\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","login","useNavigate","jsxDEV","_jsxDEV","Login","setPage","_s","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","console","log","response","data","error","style","backgroundColor","color","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { login } from '../services/authService';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login =  ({ setPage }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n // const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await login(username, password);\n       // navigate after successful login\n      //navigate(\"/job-applications\");\n\tconsole.log(login.response.data);\n\tsetPage('home');\n    } catch (error) {\n      console.error(\"Invalid credentials\");\n    }\n  };\n\n  return (\n    <div style={{ backgroundColor: 'black', color: 'white', padding: '20px' }}>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\n        <button type=\"submit\" style={{ backgroundColor: 'white', color: 'black' }}>Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,yBAAyB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAIA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC7C;;EAEC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMb,KAAK,CAACO,QAAQ,EAAEE,QAAQ,CAAC;MAC9B;MACD;MACLK,OAAO,CAACC,GAAG,CAACf,KAAK,CAACgB,QAAQ,CAACC,IAAI,CAAC;MAChCZ,OAAO,CAAC,MAAM,CAAC;IACZ,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,CAAC;IACtC;EACF,CAAC;EAED,oBACEf,OAAA;IAAKgB,KAAK,EAAE;MAAEC,eAAe,EAAE,OAAO;MAAEC,KAAK,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACxEpB,OAAA;MAAAoB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdxB,OAAA;MAAMyB,QAAQ,EAAEjB,YAAa;MAAAY,QAAA,gBAC3BpB,OAAA;QAAO0B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAExB,QAAS;QAACyB,QAAQ,EAAEpB,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzGxB,OAAA;QAAO0B,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAEtB,QAAS;QAACuB,QAAQ,EAAEpB,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7GxB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAACV,KAAK,EAAE;UAAEC,eAAe,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAE,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrB,EAAA,CA5BIF,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AA8BX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}