{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst REACT_APP_BACKEND_URL = process.env.REACT_APP_BACKEND_URL + \"/api\";\nconst Container = styled.div`\n    padding: 20px;\n`;\n_c = Container;\nconst SelectionContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: 10px;\n`;\n_c2 = SelectionContainer;\nconst Dropdown = styled.select`\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-top: 10px;\n    margin-right: 10px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c3 = Dropdown;\nconst QuestionsContainer = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n_c4 = QuestionsContainer;\nconst QuestionList = styled.ul`\n    list-style-type: none;\n    padding: 0;\n`;\n_c5 = QuestionList;\nconst QuestionItem = styled.li`\n    padding: 8px;\n    border-bottom: 1px solid #eee;\n    &:last-child {\n        border-bottom: none;\n    }\n`;\n_c6 = QuestionItem;\nconst JobDetails = styled.h3`\n    margin-bottom: 24px;\n`;\n_c7 = JobDetails;\nconst ResultMessage = styled.p`\n    margin-top: 20px;\n    font-weight: bold;\n`;\n_c8 = ResultMessage;\nconst PersonalizationSection = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    background-color: #f0f0f0;\n`;\n_c9 = PersonalizationSection;\nconst CheckboxLabel = styled.label`\n    display: flex; /* Use flexbox for alignment */\n    align-items: center; /* Center items vertically */\n    margin: 5px 0;\n    cursor: pointer; /* Change cursor to pointer for better UX */\n`;\n_c10 = CheckboxLabel;\nconst CheckboxInput = styled.input`\n    margin-right: 8px; /* Space between checkbox and label */\n    transform: scale(1.2); /* Optionally increase checkbox size */\n`;\n_c11 = CheckboxInput;\nconst RadioLabel = styled.label`\n    display: flex; /* Use flexbox for alignment */\n    align-items: center; /* Center items vertically */\n    margin: 5px 0;\n    cursor: pointer; /* Change cursor to pointer for better UX */\n`;\n_c12 = RadioLabel;\nconst RadioInput = styled.input`\n    margin-right: 8px; /* Space between radio button and label */\n    transform: scale(1.2); /* Optionally increase radio button size */\n`;\n_c13 = RadioInput;\nconst PersonalizationHeader = styled.h4`\n    cursor: pointer;\n    color: blue;\n    text-decoration: underline;\n`;\n_c14 = PersonalizationHeader;\nconst AITools = () => {\n  _s();\n  const [jobApplications, setJobApplications] = useState([]);\n  const [interviewQuestions, setInterviewQuestions] = useState([]);\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [resultMessage, setResultMessage] = useState(\"\");\n  const [showPersonalization, setShowPersonalization] = useState(false);\n  const [preferences, setPreferences] = useState({\n    tone: [],\n    focusAreas: [],\n    questionTypes: [],\n    experienceLevel: ''\n  });\n  useEffect(() => {\n    const fetchJobApplications = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(`${REACT_APP_BACKEND_URL}/job-applications`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setJobApplications(response.data);\n        if (response.data.length > 0) {\n          setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n        }\n      } catch (error) {\n        console.error(\"Error fetching job applications:\", error);\n      }\n    };\n    fetchJobApplications();\n  }, []);\n  const handleGenerateQuestions = async () => {\n    if (!selectedJobApplication) {\n      console.error(\"No job application selected.\");\n      return;\n    }\n    const {\n      description,\n      jobTitle\n    } = selectedJobApplication;\n\n    // Get the user's resume\n    const token = localStorage.getItem(\"token\");\n    try {\n      const resumeResponse = await axios.get(`${REACT_APP_BACKEND_URL}/resumes`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const resume = resumeResponse.data; // Adjust based on your API response\n      const response = await axios.post(`${REACT_APP_BACKEND_URL}/llm/generate-interview`, {\n        description,\n        jobTitle,\n        resume,\n        preferences // Include user preferences in the payload\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Interview Response Data:\", response.data);\n      if (Array.isArray(response.data.questions)) {\n        setInterviewQuestions(response.data.questions);\n      } else {\n        console.error(\"No interview questions found in response:\", response.data);\n        setInterviewQuestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error generating questions:\", error);\n      setInterviewQuestions([]);\n    }\n  };\n  const handleGenerateQuiz = async () => {\n    if (!selectedJobApplication) {\n      console.error(\"No job application selected.\");\n      return;\n    }\n    const {\n      description,\n      jobTitle\n    } = selectedJobApplication;\n    const token = localStorage.getItem(\"token\");\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-quiz`, {\n        description,\n        jobTitle\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Quiz Response Data:\", response.data);\n      if (Array.isArray(response.data)) {\n        const formattedQuestions = response.data.map(q => ({\n          questionText: q.questionText,\n          options: q.options,\n          correctAnswer: q.correctAnswer\n        }));\n        setQuizQuestions(formattedQuestions);\n        setSelectedAnswers({});\n        setResultMessage(\"\");\n      } else {\n        console.error(\"Expected an array of quiz questions, but got:\", response.data);\n        setQuizQuestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error generating quiz:\", error);\n      setQuizQuestions([]);\n    }\n  };\n  const handleAnswerSelect = (questionIndex, answer) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [questionIndex]: answer\n    }));\n  };\n  const checkAnswers = () => {\n    let score = 0;\n    quizQuestions.forEach((question, index) => {\n      if (selectedAnswers[index] === question.correctAnswer) {\n        score++;\n      }\n    });\n    setResultMessage(`You scored ${score} out of ${quizQuestions.length}.`);\n  };\n  const handlePreferenceChange = e => {\n    const {\n      name,\n      value,\n      checked\n    } = e.target;\n    if (name === \"focusAreas\" || name === \"questionTypes\") {\n      setPreferences(prev => {\n        const newValues = checked ? [...prev[name], value] : prev[name].filter(item => item !== value);\n        return {\n          ...prev,\n          [name]: newValues\n        };\n      });\n    } else if (name === \"tone\") {\n      setPreferences(prev => {\n        const newValues = checked ? [...prev[name], value] : prev[name].filter(item => item !== value);\n        return {\n          ...prev,\n          [name]: newValues\n        };\n      });\n    } else {\n      setPreferences(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Tools\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), jobApplications.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(SelectionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          onChange: e => setSelectedJobApplication(jobApplications[e.target.value]),\n          value: jobApplications.indexOf(selectedJobApplication),\n          children: jobApplications.map((job, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: [job.jobTitle, \" - \", job.companyName]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateQuestions,\n          children: \"Interview Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateQuiz,\n          children: \"Generate Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(PersonalizationSection, {\n      children: [/*#__PURE__*/_jsxDEV(PersonalizationHeader, {\n        onClick: () => setShowPersonalization(!showPersonalization),\n        children: \"Personalize your AI responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), showPersonalization && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Select Tone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            name: \"tone\",\n            value: \"friendly\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), \"Friendly\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            name: \"tone\",\n            value: \"formal\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this), \"Formal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            name: \"tone\",\n            value: \"casual\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }, this), \"Casual\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            name: \"tone\",\n            value: \"encouraging\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this), \"Encouraging\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Select Focus Areas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            name: \"focusAreas\",\n            value: \"teamwork\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 29\n          }, this), \"Teamwork\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            name: \"focusAreas\",\n            value: \"leadership\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this), \"Leadership\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            name: \"focusAreas\",\n            value: \"communication\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this), \"Communication\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            name: \"focusAreas\",\n            value: \"problem-solving\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 29\n          }, this), \"Problem Solving\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Select Question Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            name: \"questionTypes\",\n            value: \"technical\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }, this), \"Technical\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            name: \"questionTypes\",\n            value: \"behavioral\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }, this), \"Behavioral\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            name: \"questionTypes\",\n            value: \"situational\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 29\n          }, this), \"Situational\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Select Experience Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(RadioLabel, {\n          children: [/*#__PURE__*/_jsxDEV(RadioInput, {\n            type: \"radio\",\n            name: \"experienceLevel\",\n            value: \"junior\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this), \"Junior Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(RadioLabel, {\n          children: [/*#__PURE__*/_jsxDEV(RadioInput, {\n            type: \"radio\",\n            name: \"experienceLevel\",\n            value: \"mid\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 29\n          }, this), \"Mid Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(RadioLabel, {\n          children: [/*#__PURE__*/_jsxDEV(RadioInput, {\n            type: \"radio\",\n            name: \"experienceLevel\",\n            value: \"senior\",\n            onChange: handlePreferenceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 29\n          }, this), \"Senior Level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), interviewQuestions.length > 0 && /*#__PURE__*/_jsxDEV(QuestionsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(JobDetails, {\n        children: [selectedJobApplication.jobTitle, \" at \", selectedJobApplication.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Interview Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        children: interviewQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 17\n    }, this), quizQuestions.length > 0 && /*#__PURE__*/_jsxDEV(QuestionsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(JobDetails, {\n        children: [selectedJobApplication.jobTitle, \" at \", selectedJobApplication.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quiz Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        children: quizQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 33\n          }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `question-${index}-option-${i}`,\n              name: `question-${index}`,\n              value: option,\n              onChange: () => handleAnswerSelect(index, option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `question-${index}-option-${i}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 41\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 37\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswers,\n        children: \"Check Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 21\n      }, this), resultMessage && /*#__PURE__*/_jsxDEV(ResultMessage, {\n        children: resultMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n};\n_s(AITools, \"x3JXSPgwhWS2N8YAajz9lNZpAc4=\");\n_c15 = AITools;\nexport default AITools;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SelectionContainer\");\n$RefreshReg$(_c3, \"Dropdown\");\n$RefreshReg$(_c4, \"QuestionsContainer\");\n$RefreshReg$(_c5, \"QuestionList\");\n$RefreshReg$(_c6, \"QuestionItem\");\n$RefreshReg$(_c7, \"JobDetails\");\n$RefreshReg$(_c8, \"ResultMessage\");\n$RefreshReg$(_c9, \"PersonalizationSection\");\n$RefreshReg$(_c10, \"CheckboxLabel\");\n$RefreshReg$(_c11, \"CheckboxInput\");\n$RefreshReg$(_c12, \"RadioLabel\");\n$RefreshReg$(_c13, \"RadioInput\");\n$RefreshReg$(_c14, \"PersonalizationHeader\");\n$RefreshReg$(_c15, \"AITools\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","REACT_APP_BACKEND_URL","process","env","Container","div","_c","SelectionContainer","_c2","Dropdown","select","_c3","QuestionsContainer","_c4","QuestionList","ul","_c5","QuestionItem","li","_c6","JobDetails","h3","_c7","ResultMessage","p","_c8","PersonalizationSection","_c9","CheckboxLabel","label","_c10","CheckboxInput","input","_c11","RadioLabel","_c12","RadioInput","_c13","PersonalizationHeader","h4","_c14","AITools","_s","jobApplications","setJobApplications","interviewQuestions","setInterviewQuestions","quizQuestions","setQuizQuestions","selectedJobApplication","setSelectedJobApplication","selectedAnswers","setSelectedAnswers","resultMessage","setResultMessage","showPersonalization","setShowPersonalization","preferences","setPreferences","tone","focusAreas","questionTypes","experienceLevel","fetchJobApplications","token","localStorage","getItem","response","get","headers","Authorization","data","length","error","console","handleGenerateQuestions","description","jobTitle","resumeResponse","resume","post","log","Array","isArray","questions","handleGenerateQuiz","formattedQuestions","map","q","questionText","options","correctAnswer","handleAnswerSelect","questionIndex","answer","prev","checkAnswers","score","forEach","question","index","handlePreferenceChange","e","name","value","checked","target","newValues","filter","item","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","indexOf","job","companyName","onClick","type","option","i","id","htmlFor","_c15","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst REACT_APP_BACKEND_URL = process.env.REACT_APP_BACKEND_URL + \"/api\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst SelectionContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: 10px;\n`;\n\nconst Dropdown = styled.select`\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-top: 10px;\n    margin-right: 10px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst QuestionsContainer = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n`;\n\nconst QuestionList = styled.ul`\n    list-style-type: none;\n    padding: 0;\n`;\n\nconst QuestionItem = styled.li`\n    padding: 8px;\n    border-bottom: 1px solid #eee;\n    &:last-child {\n        border-bottom: none;\n    }\n`;\n\nconst JobDetails = styled.h3`\n    margin-bottom: 24px;\n`;\n\nconst ResultMessage = styled.p`\n    margin-top: 20px;\n    font-weight: bold;\n`;\n\nconst PersonalizationSection = styled.div`\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    background-color: #f0f0f0;\n`;\n\nconst CheckboxLabel = styled.label`\n    display: flex; /* Use flexbox for alignment */\n    align-items: center; /* Center items vertically */\n    margin: 5px 0;\n    cursor: pointer; /* Change cursor to pointer for better UX */\n`;\n\nconst CheckboxInput = styled.input`\n    margin-right: 8px; /* Space between checkbox and label */\n    transform: scale(1.2); /* Optionally increase checkbox size */\n`;\n\nconst RadioLabel = styled.label`\n    display: flex; /* Use flexbox for alignment */\n    align-items: center; /* Center items vertically */\n    margin: 5px 0;\n    cursor: pointer; /* Change cursor to pointer for better UX */\n`;\n\nconst RadioInput = styled.input`\n    margin-right: 8px; /* Space between radio button and label */\n    transform: scale(1.2); /* Optionally increase radio button size */\n`;\nconst PersonalizationHeader = styled.h4`\n    cursor: pointer;\n    color: blue;\n    text-decoration: underline;\n`;\n\nconst AITools = () => {\n    const [jobApplications, setJobApplications] = useState([]);\n    const [interviewQuestions, setInterviewQuestions] = useState([]);\n    const [quizQuestions, setQuizQuestions] = useState([]);\n    const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n    const [selectedAnswers, setSelectedAnswers] = useState({});\n    const [resultMessage, setResultMessage] = useState(\"\");\n    const [showPersonalization, setShowPersonalization] = useState(false);\n    const [preferences, setPreferences] = useState({\n        tone: [],\n        focusAreas: [],\n        questionTypes: [],\n        experienceLevel: ''\n    });\n\n    useEffect(() => {\n        const fetchJobApplications = async () => {\n            try {\n                const token = localStorage.getItem(\"token\");\n                const response = await axios.get(`${REACT_APP_BACKEND_URL}/job-applications`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setJobApplications(response.data);\n                if (response.data.length > 0) {\n                    setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n                }\n            } catch (error) {\n                console.error(\"Error fetching job applications:\", error);\n            }\n        };\n\n        fetchJobApplications();\n    }, []);\n\n    const handleGenerateQuestions = async () => {\n        if (!selectedJobApplication) {\n            console.error(\"No job application selected.\");\n            return;\n        }\n\n        const { description, jobTitle } = selectedJobApplication;\n\n        // Get the user's resume\n        const token = localStorage.getItem(\"token\");\n        try {\n            const resumeResponse = await axios.get(`${REACT_APP_BACKEND_URL}/resumes`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            const resume = resumeResponse.data; // Adjust based on your API response\n            const response = await axios.post(`${REACT_APP_BACKEND_URL}/llm/generate-interview`, {\n                description,\n                jobTitle,\n                resume,\n                preferences // Include user preferences in the payload\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            console.log(\"Interview Response Data:\", response.data);\n\n            if (Array.isArray(response.data.questions)) {\n                setInterviewQuestions(response.data.questions);\n            } else {\n                console.error(\"No interview questions found in response:\", response.data);\n                setInterviewQuestions([]);\n            }\n        } catch (error) {\n            console.error(\"Error generating questions:\", error);\n            setInterviewQuestions([]);\n        }\n    };\n\n    const handleGenerateQuiz = async () => {\n        if (!selectedJobApplication) {\n            console.error(\"No job application selected.\");\n            return;\n        }\n\n        const { description, jobTitle } = selectedJobApplication;\n\n        const token = localStorage.getItem(\"token\");\n        try {\n            const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-quiz`, {\n                description,\n                jobTitle\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            console.log(\"Quiz Response Data:\", response.data);\n\n            if (Array.isArray(response.data)) {\n                const formattedQuestions = response.data.map((q) => ({\n                    questionText: q.questionText,\n                    options: q.options,\n                    correctAnswer: q.correctAnswer,\n                }));\n                setQuizQuestions(formattedQuestions);\n                setSelectedAnswers({});\n                setResultMessage(\"\");\n            } else {\n                console.error(\"Expected an array of quiz questions, but got:\", response.data);\n                setQuizQuestions([]);\n            }\n        } catch (error) {\n            console.error(\"Error generating quiz:\", error);\n            setQuizQuestions([]);\n        }\n    };\n\n    const handleAnswerSelect = (questionIndex, answer) => {\n        setSelectedAnswers((prev) => ({ ...prev, [questionIndex]: answer }));\n    };\n\n    const checkAnswers = () => {\n        let score = 0;\n        quizQuestions.forEach((question, index) => {\n            if (selectedAnswers[index] === question.correctAnswer) {\n                score++;\n            }\n        });\n        setResultMessage(`You scored ${score} out of ${quizQuestions.length}.`);\n    };\n\n    const handlePreferenceChange = (e) => {\n        const { name, value, checked } = e.target;\n        if (name === \"focusAreas\" || name === \"questionTypes\") {\n            setPreferences((prev) => {\n                const newValues = checked\n                    ? [...prev[name], value]\n                    : prev[name].filter((item) => item !== value);\n                return { ...prev, [name]: newValues };\n            });\n        } else if (name === \"tone\") {\n            setPreferences((prev) => {\n                const newValues = checked\n                    ? [...prev[name], value]\n                    : prev[name].filter((item) => item !== value);\n                return { ...prev, [name]: newValues };\n            });\n        } else {\n            setPreferences((prev) => ({ ...prev, [name]: value }));\n        }\n    };\n\n    return (\n        <Container>\n            <h2>AI Tools</h2>\n\n            {jobApplications.length > 0 && (\n                <>\n                    <SelectionContainer>\n                        <Dropdown\n                            onChange={(e) => setSelectedJobApplication(jobApplications[e.target.value])}\n                            value={jobApplications.indexOf(selectedJobApplication)}\n                        >\n                            {jobApplications.map((job, index) => (\n                                <option key={index} value={index}>\n                                    {job.jobTitle} - {job.companyName}\n                                </option>\n                            ))}\n                        </Dropdown>\n\n                        <button onClick={handleGenerateQuestions}>Interview Questions</button>\n                        <button onClick={handleGenerateQuiz}>Generate Quiz</button>\n                    </SelectionContainer>\n                </>\n            )}\n\n            {/* Personalization Section */}\n            <PersonalizationSection>\n                <PersonalizationHeader onClick={() => setShowPersonalization(!showPersonalization)}>\n                    Personalize your AI responses\n                </PersonalizationHeader>\n                {showPersonalization && (\n                    <>\n                        <h4>Select Tone</h4>\n                        <CheckboxLabel>\n                            <CheckboxInput\n                                type=\"checkbox\"\n                                name=\"tone\"\n                                value=\"friendly\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Friendly\n                        </CheckboxLabel>\n                        <CheckboxLabel>\n                            <CheckboxInput\n                                type=\"checkbox\"\n                                name=\"tone\"\n                                value=\"formal\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Formal\n                        </CheckboxLabel>\n                        <CheckboxLabel>\n                            <CheckboxInput\n                                type=\"checkbox\"\n                                name=\"tone\"\n                                value=\"casual\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Casual\n                        </CheckboxLabel>\n                        <CheckboxLabel>\n                            <CheckboxInput\n                                type=\"checkbox\"\n                                name=\"tone\"\n                                value=\"encouraging\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Encouraging\n                        </CheckboxLabel>\n\n                        <h4>Select Focus Areas</h4>\n                        <CheckboxLabel>\n                            <CheckboxInput\n                                type=\"checkbox\"\n                                name=\"focusAreas\"\n                                value=\"teamwork\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Teamwork\n                        </CheckboxLabel>\n                        <CheckboxLabel>\n                            <CheckboxInput\n                                type=\"checkbox\"\n                                name=\"focusAreas\"\n                                value=\"leadership\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Leadership\n                        </CheckboxLabel>\n                        <CheckboxLabel>\n                            <CheckboxInput\n                                type=\"checkbox\"\n                                name=\"focusAreas\"\n                                value=\"communication\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Communication\n                        </CheckboxLabel>\n                        <CheckboxLabel>\n                            <CheckboxInput\n                                type=\"checkbox\"\n                                name=\"focusAreas\"\n                                value=\"problem-solving\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Problem Solving\n                        </CheckboxLabel>\n\n                        <h4>Select Question Types</h4>\n                        <CheckboxLabel>\n                            <CheckboxInput\n                                type=\"checkbox\"\n                                name=\"questionTypes\"\n                                value=\"technical\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Technical\n                        </CheckboxLabel>\n                        <CheckboxLabel>\n                            <CheckboxInput\n                                type=\"checkbox\"\n                                name=\"questionTypes\"\n                                value=\"behavioral\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Behavioral\n                        </CheckboxLabel>\n                        <CheckboxLabel>\n                            <CheckboxInput\n                                type=\"checkbox\"\n                                name=\"questionTypes\"\n                                value=\"situational\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Situational\n                        </CheckboxLabel>\n\n                        <h4>Select Experience Level</h4>\n                        <RadioLabel>\n                            <RadioInput\n                                type=\"radio\"\n                                name=\"experienceLevel\"\n                                value=\"junior\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Junior Level\n                        </RadioLabel>\n                        <RadioLabel>\n                            <RadioInput\n                                type=\"radio\"\n                                name=\"experienceLevel\"\n                                value=\"mid\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Mid Level\n                        </RadioLabel>\n                        <RadioLabel>\n                            <RadioInput\n                                type=\"radio\"\n                                name=\"experienceLevel\"\n                                value=\"senior\"\n                                onChange={handlePreferenceChange}\n                            />\n                            Senior Level\n                        </RadioLabel>\n                    </>\n                )}\n            </PersonalizationSection>\n\n            {interviewQuestions.length > 0 && (\n                <QuestionsContainer>\n                    <JobDetails>\n                        {selectedJobApplication.jobTitle} at {selectedJobApplication.companyName}\n                    </JobDetails>\n                    <h3>Generated Interview Questions:</h3>\n                    <QuestionList>\n                        {interviewQuestions.map((question, index) => (\n                            <QuestionItem key={index}>{question}</QuestionItem>\n                        ))}\n                    </QuestionList>\n                </QuestionsContainer>\n            )}\n\n            {quizQuestions.length > 0 && (\n                <QuestionsContainer>\n                    <JobDetails>\n                        {selectedJobApplication.jobTitle} at {selectedJobApplication.companyName}\n                    </JobDetails>\n                    <h3>Quiz Questions:</h3>\n                    <QuestionList>\n                        {quizQuestions.map((question, index) => (\n                            <QuestionItem key={index}>\n                                <p>{question.questionText}</p>\n                                {question.options.map((option, i) => (\n                                    <div key={i}>\n                                        <input\n                                            type=\"radio\"\n                                            id={`question-${index}-option-${i}`}\n                                            name={`question-${index}`}\n                                            value={option}\n                                            onChange={() => handleAnswerSelect(index, option)}\n                                        />\n                                        <label htmlFor={`question-${index}-option-${i}`}>{option}</label>\n                                    </div>\n                                ))}\n                            </QuestionItem>\n                        ))}\n                    </QuestionList>\n                    <button onClick={checkAnswers}>Check Answers</button>\n                    {resultMessage && <ResultMessage>{resultMessage}</ResultMessage>}\n                </QuestionsContainer>\n            )}\n        </Container>\n    );\n};\n\nexport default AITools;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,qBAAqB,GAAGC,OAAO,CAACC,GAAG,CAACF,qBAAqB,GAAG,MAAM;AAExE,MAAMG,SAAS,GAAGR,MAAM,CAACS,GAAG;AAC5B;AACA,CAAC;AAACC,EAAA,GAFIF,SAAS;AAIf,MAAMG,kBAAkB,GAAGX,MAAM,CAACS,GAAG;AACrC;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAJID,kBAAkB;AAMxB,MAAME,QAAQ,GAAGb,MAAM,CAACc,MAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,QAAQ;AASd,MAAMG,kBAAkB,GAAGhB,MAAM,CAACS,GAAG;AACrC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GANID,kBAAkB;AAQxB,MAAME,YAAY,GAAGlB,MAAM,CAACmB,EAAE;AAC9B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,YAAY;AAKlB,MAAMG,YAAY,GAAGrB,MAAM,CAACsB,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,YAAY;AAQlB,MAAMG,UAAU,GAAGxB,MAAM,CAACyB,EAAE;AAC5B;AACA,CAAC;AAACC,GAAA,GAFIF,UAAU;AAIhB,MAAMG,aAAa,GAAG3B,MAAM,CAAC4B,CAAC;AAC9B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,aAAa;AAKnB,MAAMG,sBAAsB,GAAG9B,MAAM,CAACS,GAAG;AACzC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACsB,GAAA,GANID,sBAAsB;AAQ5B,MAAME,aAAa,GAAGhC,MAAM,CAACiC,KAAK;AAClC;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,aAAa;AAOnB,MAAMG,aAAa,GAAGnC,MAAM,CAACoC,KAAK;AAClC;AACA;AACA,CAAC;AAACC,IAAA,GAHIF,aAAa;AAKnB,MAAMG,UAAU,GAAGtC,MAAM,CAACiC,KAAK;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACM,IAAA,GALID,UAAU;AAOhB,MAAME,UAAU,GAAGxC,MAAM,CAACoC,KAAK;AAC/B;AACA;AACA,CAAC;AAACK,IAAA,GAHID,UAAU;AAIhB,MAAME,qBAAqB,GAAG1C,MAAM,CAAC2C,EAAE;AACvC;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAJIF,qBAAqB;AAM3B,MAAMG,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACoD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACsD,aAAa,EAAEC,gBAAgB,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwD,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGzD,QAAQ,CAAC,IAAI,CAAC;EAC1E,MAAM,CAAC0D,eAAe,EAAEC,kBAAkB,CAAC,GAAG3D,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAAC4D,aAAa,EAAEC,gBAAgB,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC8D,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACgE,WAAW,EAAEC,cAAc,CAAC,GAAGjE,QAAQ,CAAC;IAC3CkE,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE,EAAE;IACjBC,eAAe,EAAE;EACrB,CAAC,CAAC;EAEFpE,SAAS,CAAC,MAAM;IACZ,MAAMqE,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMxE,KAAK,CAACyE,GAAG,CAAC,GAAGnE,qBAAqB,mBAAmB,EAAE;UAC1EoE,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAChD,CAAC,CAAC;QACFpB,kBAAkB,CAACuB,QAAQ,CAACI,IAAI,CAAC;QACjC,IAAIJ,QAAQ,CAACI,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;UAC1BtB,yBAAyB,CAACiB,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD;MACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC5D;IACJ,CAAC;IAEDV,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI,CAAC1B,sBAAsB,EAAE;MACzByB,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAC;MAC7C;IACJ;IAEA,MAAM;MAAEG,WAAW;MAAEC;IAAS,CAAC,GAAG5B,sBAAsB;;IAExD;IACA,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACA,MAAMY,cAAc,GAAG,MAAMnF,KAAK,CAACyE,GAAG,CAAC,GAAGnE,qBAAqB,UAAU,EAAE;QACvEoE,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAChD,CAAC,CAAC;MAEF,MAAMe,MAAM,GAAGD,cAAc,CAACP,IAAI,CAAC,CAAC;MACpC,MAAMJ,QAAQ,GAAG,MAAMxE,KAAK,CAACqF,IAAI,CAAC,GAAG/E,qBAAqB,yBAAyB,EAAE;QACjF2E,WAAW;QACXC,QAAQ;QACRE,MAAM;QACNtB,WAAW,CAAC;MAChB,CAAC,EAAE;QACCY,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAChD,CAAC,CAAC;MAEFU,OAAO,CAACO,GAAG,CAAC,0BAA0B,EAAEd,QAAQ,CAACI,IAAI,CAAC;MAEtD,IAAIW,KAAK,CAACC,OAAO,CAAChB,QAAQ,CAACI,IAAI,CAACa,SAAS,CAAC,EAAE;QACxCtC,qBAAqB,CAACqB,QAAQ,CAACI,IAAI,CAACa,SAAS,CAAC;MAClD,CAAC,MAAM;QACHV,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEN,QAAQ,CAACI,IAAI,CAAC;QACzEzB,qBAAqB,CAAC,EAAE,CAAC;MAC7B;IACJ,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD3B,qBAAqB,CAAC,EAAE,CAAC;IAC7B;EACJ,CAAC;EAED,MAAMuC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACpC,sBAAsB,EAAE;MACzByB,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAC;MAC7C;IACJ;IAEA,MAAM;MAAEG,WAAW;MAAEC;IAAS,CAAC,GAAG5B,sBAAsB;IAExD,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMxE,KAAK,CAACqF,IAAI,CAAC,GAAG9E,OAAO,CAACC,GAAG,CAACF,qBAAqB,wBAAwB,EAAE;QAC5F2E,WAAW;QACXC;MACJ,CAAC,EAAE;QACCR,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAChD,CAAC,CAAC;MAEFU,OAAO,CAACO,GAAG,CAAC,qBAAqB,EAAEd,QAAQ,CAACI,IAAI,CAAC;MAEjD,IAAIW,KAAK,CAACC,OAAO,CAAChB,QAAQ,CAACI,IAAI,CAAC,EAAE;QAC9B,MAAMe,kBAAkB,GAAGnB,QAAQ,CAACI,IAAI,CAACgB,GAAG,CAAEC,CAAC,KAAM;UACjDC,YAAY,EAAED,CAAC,CAACC,YAAY;UAC5BC,OAAO,EAAEF,CAAC,CAACE,OAAO;UAClBC,aAAa,EAAEH,CAAC,CAACG;QACrB,CAAC,CAAC,CAAC;QACH3C,gBAAgB,CAACsC,kBAAkB,CAAC;QACpClC,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACtBE,gBAAgB,CAAC,EAAE,CAAC;MACxB,CAAC,MAAM;QACHoB,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEN,QAAQ,CAACI,IAAI,CAAC;QAC7EvB,gBAAgB,CAAC,EAAE,CAAC;MACxB;IACJ,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CzB,gBAAgB,CAAC,EAAE,CAAC;IACxB;EACJ,CAAC;EAED,MAAM4C,kBAAkB,GAAGA,CAACC,aAAa,EAAEC,MAAM,KAAK;IAClD1C,kBAAkB,CAAE2C,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACF,aAAa,GAAGC;IAAO,CAAC,CAAC,CAAC;EACxE,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIC,KAAK,GAAG,CAAC;IACblD,aAAa,CAACmD,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MACvC,IAAIjD,eAAe,CAACiD,KAAK,CAAC,KAAKD,QAAQ,CAACR,aAAa,EAAE;QACnDM,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;IACF3C,gBAAgB,CAAC,cAAc2C,KAAK,WAAWlD,aAAa,CAACyB,MAAM,GAAG,CAAC;EAC3E,CAAC;EAED,MAAM6B,sBAAsB,GAAIC,CAAC,IAAK;IAClC,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAQ,CAAC,GAAGH,CAAC,CAACI,MAAM;IACzC,IAAIH,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,eAAe,EAAE;MACnD7C,cAAc,CAAEqC,IAAI,IAAK;QACrB,MAAMY,SAAS,GAAGF,OAAO,GACnB,CAAC,GAAGV,IAAI,CAACQ,IAAI,CAAC,EAAEC,KAAK,CAAC,GACtBT,IAAI,CAACQ,IAAI,CAAC,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKL,KAAK,CAAC;QACjD,OAAO;UAAE,GAAGT,IAAI;UAAE,CAACQ,IAAI,GAAGI;QAAU,CAAC;MACzC,CAAC,CAAC;IACN,CAAC,MAAM,IAAIJ,IAAI,KAAK,MAAM,EAAE;MACxB7C,cAAc,CAAEqC,IAAI,IAAK;QACrB,MAAMY,SAAS,GAAGF,OAAO,GACnB,CAAC,GAAGV,IAAI,CAACQ,IAAI,CAAC,EAAEC,KAAK,CAAC,GACtBT,IAAI,CAACQ,IAAI,CAAC,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKL,KAAK,CAAC;QACjD,OAAO;UAAE,GAAGT,IAAI;UAAE,CAACQ,IAAI,GAAGI;QAAU,CAAC;MACzC,CAAC,CAAC;IACN,CAAC,MAAM;MACHjD,cAAc,CAAEqC,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACQ,IAAI,GAAGC;MAAM,CAAC,CAAC,CAAC;IAC1D;EACJ,CAAC;EAED,oBACI1G,OAAA,CAACM,SAAS;IAAA0G,QAAA,gBACNhH,OAAA;MAAAgH,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEhBvE,eAAe,CAAC6B,MAAM,GAAG,CAAC,iBACvB1E,OAAA,CAAAE,SAAA;MAAA8G,QAAA,eACIhH,OAAA,CAACS,kBAAkB;QAAAuG,QAAA,gBACfhH,OAAA,CAACW,QAAQ;UACL0G,QAAQ,EAAGb,CAAC,IAAKpD,yBAAyB,CAACP,eAAe,CAAC2D,CAAC,CAACI,MAAM,CAACF,KAAK,CAAC,CAAE;UAC5EA,KAAK,EAAE7D,eAAe,CAACyE,OAAO,CAACnE,sBAAsB,CAAE;UAAA6D,QAAA,EAEtDnE,eAAe,CAAC4C,GAAG,CAAC,CAAC8B,GAAG,EAAEjB,KAAK,kBAC5BtG,OAAA;YAAoB0G,KAAK,EAAEJ,KAAM;YAAAU,QAAA,GAC5BO,GAAG,CAACxC,QAAQ,EAAC,KAAG,EAACwC,GAAG,CAACC,WAAW;UAAA,GADxBlB,KAAK;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eAEXpH,OAAA;UAAQyH,OAAO,EAAE5C,uBAAwB;UAAAmC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtEpH,OAAA;UAAQyH,OAAO,EAAElC,kBAAmB;UAAAyB,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC,gBACvB,CACL,eAGDpH,OAAA,CAAC4B,sBAAsB;MAAAoF,QAAA,gBACnBhH,OAAA,CAACwC,qBAAqB;QAACiF,OAAO,EAAEA,CAAA,KAAM/D,sBAAsB,CAAC,CAACD,mBAAmB,CAAE;QAAAuD,QAAA,EAAC;MAEpF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAAC,EACvB3D,mBAAmB,iBAChBzD,OAAA,CAAAE,SAAA;QAAA8G,QAAA,gBACIhH,OAAA;UAAAgH,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBpH,OAAA,CAAC8B,aAAa;UAAAkF,QAAA,gBACVhH,OAAA,CAACiC,aAAa;YACVyF,IAAI,EAAC,UAAU;YACfjB,IAAI,EAAC,MAAM;YACXC,KAAK,EAAC,UAAU;YAChBW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,YAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBpH,OAAA,CAAC8B,aAAa;UAAAkF,QAAA,gBACVhH,OAAA,CAACiC,aAAa;YACVyF,IAAI,EAAC,UAAU;YACfjB,IAAI,EAAC,MAAM;YACXC,KAAK,EAAC,QAAQ;YACdW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,UAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBpH,OAAA,CAAC8B,aAAa;UAAAkF,QAAA,gBACVhH,OAAA,CAACiC,aAAa;YACVyF,IAAI,EAAC,UAAU;YACfjB,IAAI,EAAC,MAAM;YACXC,KAAK,EAAC,QAAQ;YACdW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,UAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBpH,OAAA,CAAC8B,aAAa;UAAAkF,QAAA,gBACVhH,OAAA,CAACiC,aAAa;YACVyF,IAAI,EAAC,UAAU;YACfjB,IAAI,EAAC,MAAM;YACXC,KAAK,EAAC,aAAa;YACnBW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAEhBpH,OAAA;UAAAgH,QAAA,EAAI;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BpH,OAAA,CAAC8B,aAAa;UAAAkF,QAAA,gBACVhH,OAAA,CAACiC,aAAa;YACVyF,IAAI,EAAC,UAAU;YACfjB,IAAI,EAAC,YAAY;YACjBC,KAAK,EAAC,UAAU;YAChBW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,YAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBpH,OAAA,CAAC8B,aAAa;UAAAkF,QAAA,gBACVhH,OAAA,CAACiC,aAAa;YACVyF,IAAI,EAAC,UAAU;YACfjB,IAAI,EAAC,YAAY;YACjBC,KAAK,EAAC,YAAY;YAClBW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,cAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBpH,OAAA,CAAC8B,aAAa;UAAAkF,QAAA,gBACVhH,OAAA,CAACiC,aAAa;YACVyF,IAAI,EAAC,UAAU;YACfjB,IAAI,EAAC,YAAY;YACjBC,KAAK,EAAC,eAAe;YACrBW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,iBAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBpH,OAAA,CAAC8B,aAAa;UAAAkF,QAAA,gBACVhH,OAAA,CAACiC,aAAa;YACVyF,IAAI,EAAC,UAAU;YACfjB,IAAI,EAAC,YAAY;YACjBC,KAAK,EAAC,iBAAiB;YACvBW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,mBAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAEhBpH,OAAA;UAAAgH,QAAA,EAAI;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BpH,OAAA,CAAC8B,aAAa;UAAAkF,QAAA,gBACVhH,OAAA,CAACiC,aAAa;YACVyF,IAAI,EAAC,UAAU;YACfjB,IAAI,EAAC,eAAe;YACpBC,KAAK,EAAC,WAAW;YACjBW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,aAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBpH,OAAA,CAAC8B,aAAa;UAAAkF,QAAA,gBACVhH,OAAA,CAACiC,aAAa;YACVyF,IAAI,EAAC,UAAU;YACfjB,IAAI,EAAC,eAAe;YACpBC,KAAK,EAAC,YAAY;YAClBW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,cAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBpH,OAAA,CAAC8B,aAAa;UAAAkF,QAAA,gBACVhH,OAAA,CAACiC,aAAa;YACVyF,IAAI,EAAC,UAAU;YACfjB,IAAI,EAAC,eAAe;YACpBC,KAAK,EAAC,aAAa;YACnBW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAEhBpH,OAAA;UAAAgH,QAAA,EAAI;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCpH,OAAA,CAACoC,UAAU;UAAA4E,QAAA,gBACPhH,OAAA,CAACsC,UAAU;YACPoF,IAAI,EAAC,OAAO;YACZjB,IAAI,EAAC,iBAAiB;YACtBC,KAAK,EAAC,QAAQ;YACdW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,gBAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbpH,OAAA,CAACoC,UAAU;UAAA4E,QAAA,gBACPhH,OAAA,CAACsC,UAAU;YACPoF,IAAI,EAAC,OAAO;YACZjB,IAAI,EAAC,iBAAiB;YACtBC,KAAK,EAAC,KAAK;YACXW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,aAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbpH,OAAA,CAACoC,UAAU;UAAA4E,QAAA,gBACPhH,OAAA,CAACsC,UAAU;YACPoF,IAAI,EAAC,OAAO;YACZjB,IAAI,EAAC,iBAAiB;YACtBC,KAAK,EAAC,QAAQ;YACdW,QAAQ,EAAEd;UAAuB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,gBAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA,eACf,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACmB,CAAC,EAExBrE,kBAAkB,CAAC2B,MAAM,GAAG,CAAC,iBAC1B1E,OAAA,CAACc,kBAAkB;MAAAkG,QAAA,gBACfhH,OAAA,CAACsB,UAAU;QAAA0F,QAAA,GACN7D,sBAAsB,CAAC4B,QAAQ,EAAC,MAAI,EAAC5B,sBAAsB,CAACqE,WAAW;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACbpH,OAAA;QAAAgH,QAAA,EAAI;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCpH,OAAA,CAACgB,YAAY;QAAAgG,QAAA,EACRjE,kBAAkB,CAAC0C,GAAG,CAAC,CAACY,QAAQ,EAAEC,KAAK,kBACpCtG,OAAA,CAACmB,YAAY;UAAA6F,QAAA,EAAcX;QAAQ,GAAhBC,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0B,CACrD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACvB,EAEAnE,aAAa,CAACyB,MAAM,GAAG,CAAC,iBACrB1E,OAAA,CAACc,kBAAkB;MAAAkG,QAAA,gBACfhH,OAAA,CAACsB,UAAU;QAAA0F,QAAA,GACN7D,sBAAsB,CAAC4B,QAAQ,EAAC,MAAI,EAAC5B,sBAAsB,CAACqE,WAAW;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACbpH,OAAA;QAAAgH,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBpH,OAAA,CAACgB,YAAY;QAAAgG,QAAA,EACR/D,aAAa,CAACwC,GAAG,CAAC,CAACY,QAAQ,EAAEC,KAAK,kBAC/BtG,OAAA,CAACmB,YAAY;UAAA6F,QAAA,gBACThH,OAAA;YAAAgH,QAAA,EAAIX,QAAQ,CAACV;UAAY;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC7Bf,QAAQ,CAACT,OAAO,CAACH,GAAG,CAAC,CAACkC,MAAM,EAAEC,CAAC,kBAC5B5H,OAAA;YAAAgH,QAAA,gBACIhH,OAAA;cACI0H,IAAI,EAAC,OAAO;cACZG,EAAE,EAAE,YAAYvB,KAAK,WAAWsB,CAAC,EAAG;cACpCnB,IAAI,EAAE,YAAYH,KAAK,EAAG;cAC1BI,KAAK,EAAEiB,MAAO;cACdN,QAAQ,EAAEA,CAAA,KAAMvB,kBAAkB,CAACQ,KAAK,EAAEqB,MAAM;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD,CAAC,eACFpH,OAAA;cAAO8H,OAAO,EAAE,YAAYxB,KAAK,WAAWsB,CAAC,EAAG;cAAAZ,QAAA,EAAEW;YAAM;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAR3DQ,CAAC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASN,CACR,CAAC;QAAA,GAbad,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcV,CACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACfpH,OAAA;QAAQyH,OAAO,EAAEvB,YAAa;QAAAc,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACpD7D,aAAa,iBAAIvD,OAAA,CAACyB,aAAa;QAAAuF,QAAA,EAAEzD;MAAa;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEpB,CAAC;AAACxE,EAAA,CAvWID,OAAO;AAAAoF,IAAA,GAAPpF,OAAO;AAyWb,eAAeA,OAAO;AAAC,IAAAnC,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAqF,IAAA;AAAAC,YAAA,CAAAxH,EAAA;AAAAwH,YAAA,CAAAtH,GAAA;AAAAsH,YAAA,CAAAnH,GAAA;AAAAmH,YAAA,CAAAjH,GAAA;AAAAiH,YAAA,CAAA9G,GAAA;AAAA8G,YAAA,CAAA3G,GAAA;AAAA2G,YAAA,CAAAxG,GAAA;AAAAwG,YAAA,CAAArG,GAAA;AAAAqG,YAAA,CAAAnG,GAAA;AAAAmG,YAAA,CAAAhG,IAAA;AAAAgG,YAAA,CAAA7F,IAAA;AAAA6F,YAAA,CAAA3F,IAAA;AAAA2F,YAAA,CAAAzF,IAAA;AAAAyF,YAAA,CAAAtF,IAAA;AAAAsF,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}