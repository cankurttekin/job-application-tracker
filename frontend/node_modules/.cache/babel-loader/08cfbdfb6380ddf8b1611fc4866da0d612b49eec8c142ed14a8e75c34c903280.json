{"ast":null,"code":"var _jsxFileName = \"/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js\",\n  _s = $RefreshSig$();\n// src/components/AITools.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 20px;\n    text-align: center;\n`;\n_c = Container;\nconst Button = styled.button`\n    background-color: #333;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 20px;\n\n    &:hover {\n        background-color: #555;\n    }\n`;\n_c2 = Button;\nconst AITools = () => {\n  _s();\n  const [jobApplications, setJobApplications] = useState([]);\n  const [interviewQuestions, setInterviewQuestions] = useState([]);\n  const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n  useEffect(() => {\n    const fetchJobApplications = async () => {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/job-applications`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setJobApplications(response.data);\n      if (response.data.length > 0) {\n        setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n      }\n    };\n    fetchJobApplications();\n  }, []);\n  const handleGenerateQuestions = async () => {\n    if (!selectedJobApplication) {\n      console.error(\"No job application selected.\");\n      return;\n    }\n    const {\n      jobDescription,\n      jobTitle\n    } = selectedJobApplication;\n    const token = localStorage.getItem(\"token\");\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-interview`, {\n        jobDescription,\n        jobTitle\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Response Data:\", response.data);\n\n      // Safely extracting questions from the response\n      if (response.data.candidates && response.data.candidates.length > 0) {\n        const parts = response.data.candidates[0].content.parts;\n\n        // Ensure parts is an array before mapping\n        if (Array.isArray(parts)) {\n          const questions = parts.map(part => part.text);\n          setInterviewQuestions(questions);\n        } else {\n          console.error(\"Expected 'parts' to be an array:\", parts);\n          setInterviewQuestions([]); // Clear questions if parts is not an array\n        }\n      } else {\n        console.error(\"No candidates found in response:\", response.data);\n        setInterviewQuestions([]); // Clear questions if no candidates found\n      }\n    } catch (error) {\n      console.error(\"Error generating questions:\", error);\n      setInterviewQuestions([]); // Clear questions on error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate Interview Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), jobApplications.length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedJobApplication(jobApplications[e.target.value]),\n      value: jobApplications.indexOf(selectedJobApplication),\n      children: jobApplications.map((job, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: index,\n        children: [job.jobTitle, \" - \", job.companyName, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleGenerateQuestions,\n      children: \"Generate Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), interviewQuestions && interviewQuestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: interviewQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(AITools, \"nXDW7rrSucfxlod37lh2tqBsfQ0=\");\n_c3 = AITools;\nexport default AITools;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"AITools\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","jsxDEV","_jsxDEV","Container","div","_c","Button","button","_c2","AITools","_s","jobApplications","setJobApplications","interviewQuestions","setInterviewQuestions","selectedJobApplication","setSelectedJobApplication","fetchJobApplications","token","localStorage","getItem","response","get","process","env","REACT_APP_BACKEND_URL","headers","Authorization","data","length","handleGenerateQuestions","console","error","jobDescription","jobTitle","post","log","candidates","parts","content","Array","isArray","questions","map","part","text","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","indexOf","job","index","companyName","onClick","question","_c3","$RefreshReg$"],"sources":["/home/cankurttekin/Documents/git/job-application-tracker-backend/frontend/src/components/AITools.js"],"sourcesContent":["// src/components/AITools.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    padding: 20px;\n    text-align: center;\n`;\n\nconst Button = styled.button`\n    background-color: #333;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 20px;\n\n    &:hover {\n        background-color: #555;\n    }\n`;\n\nconst AITools = () => {\n    const [jobApplications, setJobApplications] = useState([]);\n    const [interviewQuestions, setInterviewQuestions] = useState([]);\n    const [selectedJobApplication, setSelectedJobApplication] = useState(null);\n\n    useEffect(() => {\n        const fetchJobApplications = async () => {\n            const token = localStorage.getItem(\"token\");\n            const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/job-applications`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            setJobApplications(response.data);\n            if (response.data.length > 0) {\n                setSelectedJobApplication(response.data[0]); // Set the first job application as selected\n            }\n        };\n\n        fetchJobApplications();\n    }, []);\n\n    const handleGenerateQuestions = async () => {\n        if (!selectedJobApplication) {\n            console.error(\"No job application selected.\");\n            return;\n        }\n\n        const { jobDescription, jobTitle } = selectedJobApplication;\n\n        const token = localStorage.getItem(\"token\");\n        try {\n            const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/llm/generate-interview`, {\n                jobDescription,\n                jobTitle\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            console.log(\"Response Data:\", response.data);\n\n            // Safely extracting questions from the response\n            if (response.data.candidates && response.data.candidates.length > 0) {\n                const parts = response.data.candidates[0].content.parts;\n\n                // Ensure parts is an array before mapping\n                if (Array.isArray(parts)) {\n                    const questions = parts.map(part => part.text);\n                    setInterviewQuestions(questions);\n                } else {\n                    console.error(\"Expected 'parts' to be an array:\", parts);\n                    setInterviewQuestions([]); // Clear questions if parts is not an array\n                }\n            } else {\n                console.error(\"No candidates found in response:\", response.data);\n                setInterviewQuestions([]); // Clear questions if no candidates found\n            }\n        } catch (error) {\n            console.error(\"Error generating questions:\", error);\n            setInterviewQuestions([]); // Clear questions on error\n        }\n    };\n\n    return (\n        <Container>\n            <h2>Generate Interview Questions</h2>\n\n            {jobApplications.length > 0 && (\n                <select\n                    onChange={(e) => setSelectedJobApplication(jobApplications[e.target.value])}\n                    value={jobApplications.indexOf(selectedJobApplication)}\n                >\n                    {jobApplications.map((job, index) => (\n                        <option key={index} value={index}>\n                            {job.jobTitle} - {job.companyName} {/* Adjust to match your job application structure */}\n                        </option>\n                    ))}\n                </select>\n            )}\n\n            <Button onClick={handleGenerateQuestions}>Generate Questions</Button>\n            {interviewQuestions && interviewQuestions.length > 0 && (\n                <div>\n                    <h3>Generated Questions:</h3>\n                    <ul>\n                        {interviewQuestions.map((question, index) => (\n                            <li key={index}>{question}</li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </Container>\n    );\n};\n\nexport default AITools;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}